generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["barueri", "belo_horizonte", "brasilia", "cabofrio", "cascavel", "criciuma", "matriz", "morumbi", "petropolis", "salvador", "santo_amaro", "tatuape"]
}

model barueri_alteracao_atendimentos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos barueri_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("barueri")
}

model barueri_alteracao_campos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos barueri_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("barueri")
}

model barueri_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   barueri_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         barueri_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("barueri")
}

model barueri_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   barueri_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           barueri_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("barueri")
}

model barueri_atendimento_entradas {
  id                 BigInt                @id @default(autoincrement())
  created_at         DateTime?             @db.Timestamptz(6)
  updated_at         DateTime?             @db.Timestamptz(6)
  deleted_at         DateTime?             @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?              @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       barueri_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("barueri")
}

model barueri_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    barueri_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   barueri_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("barueri")
}

model barueri_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    barueri_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   barueri_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("barueri")
}

model barueri_atendimento_saidas {
  id                 BigInt                @id @default(autoincrement())
  created_at         DateTime?             @db.Timestamptz(6)
  updated_at         DateTime?             @db.Timestamptz(6)
  deleted_at         DateTime?             @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?              @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       barueri_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("barueri")
}

model barueri_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   barueri_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       barueri_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("barueri")
}

model barueri_atendimentos {
  id                                     BigInt                                           @id @default(autoincrement())
  created_at                             DateTime?                                        @db.Timestamptz(6)
  updated_at                             DateTime?                                        @db.Timestamptz(6)
  deleted_at                             DateTime?                                        @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                         @db.Decimal
  acrestimo                              Decimal?                                         @db.Decimal
  desconto                               Decimal?                                         @db.Decimal
  valor_total                            Decimal?                                         @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                         @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      barueri_atendimento_datas[]
  atendimento_entradas                   barueri_atendimento_entradas[]
  atendimento_preferencias_profissionais barueri_atendimento_preferencias_profissionais[]
  atendimento_profissionais              barueri_atendimento_profissionais[]
  atendimento_saidas                     barueri_atendimento_saidas[]
  atendimento_servicos                   barueri_atendimento_servicos[]
  clientes                               barueri_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 barueri_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              barueri_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               barueri_financas[]
  reclamacoes_atendimentos               barueri_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("barueri")
}

model barueri_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    barueri_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   barueri_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("barueri")
}

model barueri_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   barueri_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      barueri_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("barueri")
}

model barueri_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   barueri_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     barueri_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("barueri")
}

model barueri_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          barueri_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   barueri_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("barueri")
}

model barueri_clientes {
  id                   BigInt                      @id @default(autoincrement())
  created_at           DateTime?                   @db.Timestamptz(6)
  updated_at           DateTime?                   @db.Timestamptz(6)
  deleted_at           DateTime?                   @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         barueri_atendimentos[]
  cliente_enderecos    barueri_cliente_enderecos[]
  cliente_midias       barueri_cliente_midias[]
  cliente_planos       barueri_cliente_planos[]
  cliente_status       barueri_cliente_status[]
  financas             barueri_financas[]
  restritos            barueri_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("barueri")
}

model barueri_cupoms {
  id            BigInt                 @id @default(autoincrement())
  created_at    DateTime?              @db.Timestamptz(6)
  updated_at    DateTime?              @db.Timestamptz(6)
  deleted_at    DateTime?              @db.Timestamptz(6)
  nome          String?
  valor         Decimal?               @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  barueri_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("barueri")
}

model barueri_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           barueri_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   barueri_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("barueri")
}

model barueri_data {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas barueri_atendimento_datas[]
  reclamacoes       barueri_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("barueri")
}

model barueri_enderecos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      barueri_atendimentos[]
  cliente_enderecos barueri_cliente_enderecos[]
  profissionals     barueri_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("barueri")
}

model barueri_especialidades {
  id                          BigInt                                @id @default(autoincrement())
  created_at                  DateTime?                             @db.Timestamptz(6)
  updated_at                  DateTime?                             @db.Timestamptz(6)
  deleted_at                  DateTime?                             @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades barueri_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("barueri")
}

model barueri_files {
  id                  BigInt                        @id @default(autoincrement())
  created_at          DateTime?                     @db.Timestamptz(6)
  updated_at          DateTime?                     @db.Timestamptz(6)
  deleted_at          DateTime?                     @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      barueri_cliente_midias[]
  customer_midias     barueri_customer_midias[]
  profissional_anexos barueri_profissional_anexos[]
  users_midias        barueri_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("barueri")
}

model barueri_financas {
  id                      BigInt                 @id @default(autoincrement())
  created_at              DateTime?              @db.Timestamptz(6)
  updated_at              DateTime?              @db.Timestamptz(6)
  deleted_at              DateTime?              @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?               @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?               @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            barueri_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                barueri_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           barueri_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("barueri")
}

model barueri_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           barueri_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   barueri_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("barueri")
}

model barueri_franquias {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros barueri_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("barueri")
}

model barueri_franquias_bairros {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros barueri_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("barueri")
}

model barueri_grupos {
  id           BigInt                 @id @default(autoincrement())
  created_at   DateTime?              @db.Timestamptz(6)
  updated_at   DateTime?              @db.Timestamptz(6)
  deleted_at   DateTime?              @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos barueri_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("barueri")
}

model barueri_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("barueri")
}

model barueri_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("barueri")
}

model barueri_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("barueri")
}

model barueri_planos {
  id             BigInt                   @id @default(autoincrement())
  created_at     DateTime?                @db.Timestamptz(6)
  updated_at     DateTime?                @db.Timestamptz(6)
  deleted_at     DateTime?                @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                 @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos barueri_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("barueri")
}

model barueri_precos {
  id         BigInt            @id @default(autoincrement())
  created_at DateTime?         @db.Timestamptz(6)
  updated_at DateTime?         @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?          @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   barueri_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("barueri")
}

model barueri_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           barueri_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   barueri_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("barueri")
}

model barueri_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     barueri_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   barueri_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("barueri")
}

model barueri_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    barueri_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     barueri_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("barueri")
}

model barueri_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   barueri_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        barueri_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("barueri")
}

model barueri_profissionals {
  id                                     BigInt                                           @id @default(autoincrement())
  created_at                             DateTime?                                        @db.Timestamptz(6)
  updated_at                             DateTime?                                        @db.Timestamptz(6)
  deleted_at                             DateTime?                                        @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                          @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                         @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais barueri_atendimento_preferencias_profissionais[]
  atendimento_profissionais              barueri_atendimento_profissionais[]
  customer_midias                        barueri_customer_midias[]
  financas                               barueri_financas[]
  profissional_anexos                    barueri_profissional_anexos[]
  profissional_disponibilidade           barueri_profissional_disponibilidade[]
  profissional_especialidades            barueri_profissional_especialidades[]
  profissional_servicos                  barueri_profissional_servicos[]
  enderecos                              barueri_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            barueri_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("barueri")
}

model barueri_reclamacoes {
  id                       BigInt                             @id @default(autoincrement())
  created_at               DateTime?                          @db.Timestamptz(6)
  updated_at               DateTime?                          @db.Timestamptz(6)
  deleted_at               DateTime?                          @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     barueri_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            barueri_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos barueri_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("barueri")
}

model barueri_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   barueri_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    barueri_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("barueri")
}

model barueri_restritos {
  id         BigInt            @id @default(autoincrement())
  created_at DateTime?         @db.Timestamptz(6)
  updated_at DateTime?         @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  cliente    BigInt?
  clientes   barueri_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("barueri")
}

model barueri_servicos {
  id                    BigInt                          @id @default(autoincrement())
  created_at            DateTime?                       @db.Timestamptz(6)
  updated_at            DateTime?                       @db.Timestamptz(6)
  deleted_at            DateTime?                       @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  barueri_atendimento_servicos[]
  precos                barueri_precos[]
  profissional_servicos barueri_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("barueri")
}

model barueri_status_clientes {
  id                           BigInt                                 @id @default(autoincrement())
  created_at                   DateTime?                              @db.Timestamptz(6)
  updated_at                   DateTime?                              @db.Timestamptz(6)
  deleted_at                   DateTime?                              @db.Timestamptz(6)
  nome                         String?
  cliente_status               barueri_cliente_status[]
  profissional_disponibilidade barueri_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("barueri")
}

model barueri_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("barueri")
}

model barueri_users {
  id           BigInt                 @id @default(autoincrement())
  created_at   DateTime?              @db.Timestamptz(6)
  updated_at   DateTime?              @db.Timestamptz(6)
  deleted_at   DateTime?              @db.Timestamptz(6)
  username     String?                @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos barueri_users_grupos[]
  users_midias barueri_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("barueri")
}

model barueri_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    barueri_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     barueri_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("barueri")
}

model barueri_users_midias {
  user_id  BigInt
  files_id BigInt
  files    barueri_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    barueri_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("barueri")
}

model barueri_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("barueri")
}

model barueri_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("barueri")
}

model belo_horizonte_alteracao_atendimentos {
  id                BigInt                             @id @default(autoincrement())
  created_at        DateTime?                          @db.Timestamptz(6)
  updated_at        DateTime?                          @db.Timestamptz(6)
  deleted_at        DateTime?                          @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos belo_horizonte_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("belo_horizonte")
}

model belo_horizonte_alteracao_campos {
  id                BigInt                             @id @default(autoincrement())
  created_at        DateTime?                          @db.Timestamptz(6)
  updated_at        DateTime?                          @db.Timestamptz(6)
  deleted_at        DateTime?                          @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos belo_horizonte_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("belo_horizonte")
}

model belo_horizonte_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   belo_horizonte_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         belo_horizonte_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   belo_horizonte_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           belo_horizonte_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimento_entradas {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?                     @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       belo_horizonte_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    belo_horizonte_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   belo_horizonte_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    belo_horizonte_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   belo_horizonte_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimento_saidas {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?                     @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       belo_horizonte_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   belo_horizonte_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       belo_horizonte_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("belo_horizonte")
}

model belo_horizonte_atendimentos {
  id                                     BigInt                                                  @id @default(autoincrement())
  created_at                             DateTime?                                               @db.Timestamptz(6)
  updated_at                             DateTime?                                               @db.Timestamptz(6)
  deleted_at                             DateTime?                                               @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                                @db.Decimal
  acrestimo                              Decimal?                                                @db.Decimal
  desconto                               Decimal?                                                @db.Decimal
  valor_total                            Decimal?                                                @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                                @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      belo_horizonte_atendimento_datas[]
  atendimento_entradas                   belo_horizonte_atendimento_entradas[]
  atendimento_preferencias_profissionais belo_horizonte_atendimento_preferencias_profissionais[]
  atendimento_profissionais              belo_horizonte_atendimento_profissionais[]
  atendimento_saidas                     belo_horizonte_atendimento_saidas[]
  atendimento_servicos                   belo_horizonte_atendimento_servicos[]
  clientes                               belo_horizonte_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 belo_horizonte_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              belo_horizonte_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               belo_horizonte_financas[]
  reclamacoes_atendimentos               belo_horizonte_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("belo_horizonte")
}

model belo_horizonte_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    belo_horizonte_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   belo_horizonte_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("belo_horizonte")
}

model belo_horizonte_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   belo_horizonte_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      belo_horizonte_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("belo_horizonte")
}

model belo_horizonte_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   belo_horizonte_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     belo_horizonte_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("belo_horizonte")
}

model belo_horizonte_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          belo_horizonte_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   belo_horizonte_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("belo_horizonte")
}

model belo_horizonte_clientes {
  id                   BigInt                             @id @default(autoincrement())
  created_at           DateTime?                          @db.Timestamptz(6)
  updated_at           DateTime?                          @db.Timestamptz(6)
  deleted_at           DateTime?                          @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         belo_horizonte_atendimentos[]
  cliente_enderecos    belo_horizonte_cliente_enderecos[]
  cliente_midias       belo_horizonte_cliente_midias[]
  cliente_planos       belo_horizonte_cliente_planos[]
  cliente_status       belo_horizonte_cliente_status[]
  financas             belo_horizonte_financas[]
  restritos            belo_horizonte_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("belo_horizonte")
}

model belo_horizonte_cupoms {
  id            BigInt                        @id @default(autoincrement())
  created_at    DateTime?                     @db.Timestamptz(6)
  updated_at    DateTime?                     @db.Timestamptz(6)
  deleted_at    DateTime?                     @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                      @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  belo_horizonte_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("belo_horizonte")
}

model belo_horizonte_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           belo_horizonte_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   belo_horizonte_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("belo_horizonte")
}

model belo_horizonte_data {
  id                BigInt                             @id @default(autoincrement())
  created_at        DateTime?                          @db.Timestamptz(6)
  updated_at        DateTime?                          @db.Timestamptz(6)
  deleted_at        DateTime?                          @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas belo_horizonte_atendimento_datas[]
  reclamacoes       belo_horizonte_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("belo_horizonte")
}

model belo_horizonte_enderecos {
  id                BigInt                             @id @default(autoincrement())
  created_at        DateTime?                          @db.Timestamptz(6)
  updated_at        DateTime?                          @db.Timestamptz(6)
  deleted_at        DateTime?                          @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      belo_horizonte_atendimentos[]
  cliente_enderecos belo_horizonte_cliente_enderecos[]
  profissionals     belo_horizonte_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("belo_horizonte")
}

model belo_horizonte_especialidades {
  id                          BigInt                                       @id @default(autoincrement())
  created_at                  DateTime?                                    @db.Timestamptz(6)
  updated_at                  DateTime?                                    @db.Timestamptz(6)
  deleted_at                  DateTime?                                    @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades belo_horizonte_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("belo_horizonte")
}

model belo_horizonte_files {
  id                  BigInt                               @id @default(autoincrement())
  created_at          DateTime?                            @db.Timestamptz(6)
  updated_at          DateTime?                            @db.Timestamptz(6)
  deleted_at          DateTime?                            @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      belo_horizonte_cliente_midias[]
  customer_midias     belo_horizonte_customer_midias[]
  profissional_anexos belo_horizonte_profissional_anexos[]
  users_midias        belo_horizonte_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("belo_horizonte")
}

model belo_horizonte_financas {
  id                      BigInt                        @id @default(autoincrement())
  created_at              DateTime?                     @db.Timestamptz(6)
  updated_at              DateTime?                     @db.Timestamptz(6)
  deleted_at              DateTime?                     @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                      @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                      @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            belo_horizonte_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                belo_horizonte_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           belo_horizonte_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("belo_horizonte")
}

model belo_horizonte_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           belo_horizonte_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   belo_horizonte_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("belo_horizonte")
}

model belo_horizonte_franquias {
  id                 BigInt                              @id @default(autoincrement())
  created_at         DateTime?                           @db.Timestamptz(6)
  updated_at         DateTime?                           @db.Timestamptz(6)
  deleted_at         DateTime?                           @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros belo_horizonte_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("belo_horizonte")
}

model belo_horizonte_franquias_bairros {
  id                 BigInt                              @id @default(autoincrement())
  created_at         DateTime?                           @db.Timestamptz(6)
  updated_at         DateTime?                           @db.Timestamptz(6)
  deleted_at         DateTime?                           @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros belo_horizonte_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("belo_horizonte")
}

model belo_horizonte_grupos {
  id           BigInt                        @id @default(autoincrement())
  created_at   DateTime?                     @db.Timestamptz(6)
  updated_at   DateTime?                     @db.Timestamptz(6)
  deleted_at   DateTime?                     @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos belo_horizonte_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("belo_horizonte")
}

model belo_horizonte_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("belo_horizonte")
}

model belo_horizonte_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("belo_horizonte")
}

model belo_horizonte_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("belo_horizonte")
}

model belo_horizonte_planos {
  id             BigInt                          @id @default(autoincrement())
  created_at     DateTime?                       @db.Timestamptz(6)
  updated_at     DateTime?                       @db.Timestamptz(6)
  deleted_at     DateTime?                       @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                        @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos belo_horizonte_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("belo_horizonte")
}

model belo_horizonte_precos {
  id         BigInt                   @id @default(autoincrement())
  created_at DateTime?                @db.Timestamptz(6)
  updated_at DateTime?                @db.Timestamptz(6)
  deleted_at DateTime?                @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?                 @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   belo_horizonte_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("belo_horizonte")
}

model belo_horizonte_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           belo_horizonte_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   belo_horizonte_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("belo_horizonte")
}

model belo_horizonte_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     belo_horizonte_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   belo_horizonte_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("belo_horizonte")
}

model belo_horizonte_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    belo_horizonte_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     belo_horizonte_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("belo_horizonte")
}

model belo_horizonte_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   belo_horizonte_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        belo_horizonte_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("belo_horizonte")
}

model belo_horizonte_profissionals {
  id                                     BigInt                                                  @id @default(autoincrement())
  created_at                             DateTime?                                               @db.Timestamptz(6)
  updated_at                             DateTime?                                               @db.Timestamptz(6)
  deleted_at                             DateTime?                                               @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                                 @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                                @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais belo_horizonte_atendimento_preferencias_profissionais[]
  atendimento_profissionais              belo_horizonte_atendimento_profissionais[]
  customer_midias                        belo_horizonte_customer_midias[]
  financas                               belo_horizonte_financas[]
  profissional_anexos                    belo_horizonte_profissional_anexos[]
  profissional_disponibilidade           belo_horizonte_profissional_disponibilidade[]
  profissional_especialidades            belo_horizonte_profissional_especialidades[]
  profissional_servicos                  belo_horizonte_profissional_servicos[]
  enderecos                              belo_horizonte_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            belo_horizonte_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("belo_horizonte")
}

model belo_horizonte_reclamacoes {
  id                       BigInt                                    @id @default(autoincrement())
  created_at               DateTime?                                 @db.Timestamptz(6)
  updated_at               DateTime?                                 @db.Timestamptz(6)
  deleted_at               DateTime?                                 @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     belo_horizonte_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            belo_horizonte_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos belo_horizonte_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("belo_horizonte")
}

model belo_horizonte_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   belo_horizonte_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    belo_horizonte_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("belo_horizonte")
}

model belo_horizonte_restritos {
  id         BigInt                   @id @default(autoincrement())
  created_at DateTime?                @db.Timestamptz(6)
  updated_at DateTime?                @db.Timestamptz(6)
  deleted_at DateTime?                @db.Timestamptz(6)
  cliente    BigInt?
  clientes   belo_horizonte_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("belo_horizonte")
}

model belo_horizonte_servicos {
  id                    BigInt                                 @id @default(autoincrement())
  created_at            DateTime?                              @db.Timestamptz(6)
  updated_at            DateTime?                              @db.Timestamptz(6)
  deleted_at            DateTime?                              @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  belo_horizonte_atendimento_servicos[]
  precos                belo_horizonte_precos[]
  profissional_servicos belo_horizonte_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("belo_horizonte")
}

model belo_horizonte_status_clientes {
  id                           BigInt                                        @id @default(autoincrement())
  created_at                   DateTime?                                     @db.Timestamptz(6)
  updated_at                   DateTime?                                     @db.Timestamptz(6)
  deleted_at                   DateTime?                                     @db.Timestamptz(6)
  nome                         String?
  cliente_status               belo_horizonte_cliente_status[]
  profissional_disponibilidade belo_horizonte_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("belo_horizonte")
}

model belo_horizonte_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("belo_horizonte")
}

model belo_horizonte_users {
  id           BigInt                        @id @default(autoincrement())
  created_at   DateTime?                     @db.Timestamptz(6)
  updated_at   DateTime?                     @db.Timestamptz(6)
  deleted_at   DateTime?                     @db.Timestamptz(6)
  username     String?                       @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                       @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos belo_horizonte_users_grupos[]
  users_midias belo_horizonte_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("belo_horizonte")
}

model belo_horizonte_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    belo_horizonte_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     belo_horizonte_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("belo_horizonte")
}

model belo_horizonte_users_midias {
  user_id  BigInt
  files_id BigInt
  files    belo_horizonte_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    belo_horizonte_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("belo_horizonte")
}

model belo_horizonte_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("belo_horizonte")
}

model belo_horizonte_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("belo_horizonte")
}

model brasilia_alteracao_atendimentos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos brasilia_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("brasilia")
}

model brasilia_alteracao_campos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos brasilia_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("brasilia")
}

model brasilia_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   brasilia_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         brasilia_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("brasilia")
}

model brasilia_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   brasilia_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           brasilia_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("brasilia")
}

model brasilia_atendimento_entradas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       brasilia_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("brasilia")
}

model brasilia_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    brasilia_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   brasilia_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("brasilia")
}

model brasilia_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    brasilia_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   brasilia_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("brasilia")
}

model brasilia_atendimento_saidas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       brasilia_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("brasilia")
}

model brasilia_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   brasilia_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       brasilia_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("brasilia")
}

model brasilia_atendimentos {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                          @db.Decimal
  acrestimo                              Decimal?                                          @db.Decimal
  desconto                               Decimal?                                          @db.Decimal
  valor_total                            Decimal?                                          @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                          @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      brasilia_atendimento_datas[]
  atendimento_entradas                   brasilia_atendimento_entradas[]
  atendimento_preferencias_profissionais brasilia_atendimento_preferencias_profissionais[]
  atendimento_profissionais              brasilia_atendimento_profissionais[]
  atendimento_saidas                     brasilia_atendimento_saidas[]
  atendimento_servicos                   brasilia_atendimento_servicos[]
  clientes                               brasilia_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 brasilia_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              brasilia_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               brasilia_financas[]
  reclamacoes_atendimentos               brasilia_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("brasilia")
}

model brasilia_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    brasilia_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   brasilia_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("brasilia")
}

model brasilia_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   brasilia_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      brasilia_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("brasilia")
}

model brasilia_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   brasilia_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     brasilia_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("brasilia")
}

model brasilia_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          brasilia_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   brasilia_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("brasilia")
}

model brasilia_clientes {
  id                   BigInt                       @id @default(autoincrement())
  created_at           DateTime?                    @db.Timestamptz(6)
  updated_at           DateTime?                    @db.Timestamptz(6)
  deleted_at           DateTime?                    @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?                      @unique
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         brasilia_atendimentos[]
  cliente_enderecos    brasilia_cliente_enderecos[]
  cliente_midias       brasilia_cliente_midias[]
  cliente_planos       brasilia_cliente_planos[]
  cliente_status       brasilia_cliente_status[]
  financas             brasilia_financas[]
  restritos            brasilia_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("brasilia")
}

model brasilia_cupoms {
  id            BigInt                  @id @default(autoincrement())
  created_at    DateTime?               @db.Timestamptz(6)
  updated_at    DateTime?               @db.Timestamptz(6)
  deleted_at    DateTime?               @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  brasilia_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("brasilia")
}

model brasilia_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           brasilia_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   brasilia_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("brasilia")
}

model brasilia_data {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas brasilia_atendimento_datas[]
  reclamacoes       brasilia_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("brasilia")
}

model brasilia_enderecos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      brasilia_atendimentos[]
  cliente_enderecos brasilia_cliente_enderecos[]
  profissionals     brasilia_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("brasilia")
}

model brasilia_especialidades {
  id                          BigInt                                 @id @default(autoincrement())
  created_at                  DateTime?                              @db.Timestamptz(6)
  updated_at                  DateTime?                              @db.Timestamptz(6)
  deleted_at                  DateTime?                              @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades brasilia_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("brasilia")
}

model brasilia_files {
  id                  BigInt                         @id @default(autoincrement())
  created_at          DateTime?                      @db.Timestamptz(6)
  updated_at          DateTime?                      @db.Timestamptz(6)
  deleted_at          DateTime?                      @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      brasilia_cliente_midias[]
  customer_midias     brasilia_customer_midias[]
  profissional_anexos brasilia_profissional_anexos[]
  users_midias        brasilia_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("brasilia")
}

model brasilia_financas {
  id                      BigInt                  @id @default(autoincrement())
  created_at              DateTime?               @db.Timestamptz(6)
  updated_at              DateTime?               @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            brasilia_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                brasilia_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           brasilia_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("brasilia")
}

model brasilia_franquias {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  nome       String?
  url        String?
  latitude   String?
  longitude  String?

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("brasilia")
}

model brasilia_grupos {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos brasilia_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("brasilia")
}

model brasilia_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("brasilia")
}

model brasilia_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("brasilia")
}

model brasilia_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("brasilia")
}

model brasilia_planos {
  id             BigInt                    @id @default(autoincrement())
  created_at     DateTime?                 @db.Timestamptz(6)
  updated_at     DateTime?                 @db.Timestamptz(6)
  deleted_at     DateTime?                 @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                  @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos brasilia_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("brasilia")
}

model brasilia_precos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?           @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   brasilia_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("brasilia")
}

model brasilia_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           brasilia_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   brasilia_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("brasilia")
}

model brasilia_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     brasilia_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   brasilia_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("brasilia")
}

model brasilia_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    brasilia_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     brasilia_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("brasilia")
}

model brasilia_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   brasilia_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        brasilia_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("brasilia")
}

model brasilia_profissionals {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                           @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                          @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais brasilia_atendimento_preferencias_profissionais[]
  atendimento_profissionais              brasilia_atendimento_profissionais[]
  customer_midias                        brasilia_customer_midias[]
  financas                               brasilia_financas[]
  profissional_anexos                    brasilia_profissional_anexos[]
  profissional_disponibilidade           brasilia_profissional_disponibilidade[]
  profissional_especialidades            brasilia_profissional_especialidades[]
  profissional_servicos                  brasilia_profissional_servicos[]
  enderecos                              brasilia_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            brasilia_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("brasilia")
}

model brasilia_reclamacoes {
  id                       BigInt                              @id @default(autoincrement())
  created_at               DateTime?                           @db.Timestamptz(6)
  updated_at               DateTime?                           @db.Timestamptz(6)
  deleted_at               DateTime?                           @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     brasilia_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            brasilia_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos brasilia_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("brasilia")
}

model brasilia_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   brasilia_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    brasilia_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("brasilia")
}

model brasilia_restritos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  cliente    BigInt?
  clientes   brasilia_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("brasilia")
}

model brasilia_servicos {
  id                    BigInt                           @id @default(autoincrement())
  created_at            DateTime?                        @db.Timestamptz(6)
  updated_at            DateTime?                        @db.Timestamptz(6)
  deleted_at            DateTime?                        @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  brasilia_atendimento_servicos[]
  precos                brasilia_precos[]
  profissional_servicos brasilia_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("brasilia")
}

model brasilia_status_clientes {
  id                           BigInt                                  @id @default(autoincrement())
  created_at                   DateTime?                               @db.Timestamptz(6)
  updated_at                   DateTime?                               @db.Timestamptz(6)
  deleted_at                   DateTime?                               @db.Timestamptz(6)
  nome                         String?
  cliente_status               brasilia_cliente_status[]
  profissional_disponibilidade brasilia_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("brasilia")
}

model brasilia_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("brasilia")
}

model brasilia_users {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  username     String?                 @unique
  password     String?
  nome         String?
  email        String?                 @unique
  is_staff     Boolean?
  users_grupos brasilia_users_grupos[]
  users_midias brasilia_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("brasilia")
}

model brasilia_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    brasilia_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     brasilia_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("brasilia")
}

model brasilia_users_midias {
  user_id  BigInt
  files_id BigInt
  files    brasilia_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    brasilia_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("brasilia")
}

model brasilia_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("brasilia")
}

model brasilia_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("brasilia")
}

model cabofrio_alteracao_atendimentos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos cabofrio_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("cabofrio")
}

model cabofrio_alteracao_campos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos cabofrio_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("cabofrio")
}

model cabofrio_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   cabofrio_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         cabofrio_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("cabofrio")
}

model cabofrio_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   cabofrio_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           cabofrio_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("cabofrio")
}

model cabofrio_atendimento_entradas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       cabofrio_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("cabofrio")
}

model cabofrio_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    cabofrio_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   cabofrio_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("cabofrio")
}

model cabofrio_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    cabofrio_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   cabofrio_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("cabofrio")
}

model cabofrio_atendimento_saidas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       cabofrio_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("cabofrio")
}

model cabofrio_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   cabofrio_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       cabofrio_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("cabofrio")
}

model cabofrio_atendimentos {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                          @db.Decimal
  acrestimo                              Decimal?                                          @db.Decimal
  desconto                               Decimal?                                          @db.Decimal
  valor_total                            Decimal?                                          @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                          @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      cabofrio_atendimento_datas[]
  atendimento_entradas                   cabofrio_atendimento_entradas[]
  atendimento_preferencias_profissionais cabofrio_atendimento_preferencias_profissionais[]
  atendimento_profissionais              cabofrio_atendimento_profissionais[]
  atendimento_saidas                     cabofrio_atendimento_saidas[]
  atendimento_servicos                   cabofrio_atendimento_servicos[]
  clientes                               cabofrio_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 cabofrio_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              cabofrio_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               cabofrio_financas[]
  reclamacoes_atendimentos               cabofrio_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("cabofrio")
}

model cabofrio_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    cabofrio_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   cabofrio_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("cabofrio")
}

model cabofrio_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   cabofrio_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      cabofrio_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("cabofrio")
}

model cabofrio_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   cabofrio_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     cabofrio_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("cabofrio")
}

model cabofrio_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          cabofrio_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   cabofrio_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("cabofrio")
}

model cabofrio_clientes {
  id                   BigInt                       @id @default(autoincrement())
  created_at           DateTime?                    @db.Timestamptz(6)
  updated_at           DateTime?                    @db.Timestamptz(6)
  deleted_at           DateTime?                    @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         cabofrio_atendimentos[]
  cliente_enderecos    cabofrio_cliente_enderecos[]
  cliente_midias       cabofrio_cliente_midias[]
  cliente_planos       cabofrio_cliente_planos[]
  cliente_status       cabofrio_cliente_status[]
  financas             cabofrio_financas[]
  restritos            cabofrio_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("cabofrio")
}

model cabofrio_cupoms {
  id            BigInt                  @id @default(autoincrement())
  created_at    DateTime?               @db.Timestamptz(6)
  updated_at    DateTime?               @db.Timestamptz(6)
  deleted_at    DateTime?               @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  cabofrio_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("cabofrio")
}

model cabofrio_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           cabofrio_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   cabofrio_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("cabofrio")
}

model cabofrio_data {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas cabofrio_atendimento_datas[]
  reclamacoes       cabofrio_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("cabofrio")
}

model cabofrio_enderecos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      cabofrio_atendimentos[]
  cliente_enderecos cabofrio_cliente_enderecos[]
  profissionals     cabofrio_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("cabofrio")
}

model cabofrio_especialidades {
  id                          BigInt                                 @id @default(autoincrement())
  created_at                  DateTime?                              @db.Timestamptz(6)
  updated_at                  DateTime?                              @db.Timestamptz(6)
  deleted_at                  DateTime?                              @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades cabofrio_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("cabofrio")
}

model cabofrio_files {
  id                  BigInt                         @id @default(autoincrement())
  created_at          DateTime?                      @db.Timestamptz(6)
  updated_at          DateTime?                      @db.Timestamptz(6)
  deleted_at          DateTime?                      @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      cabofrio_cliente_midias[]
  customer_midias     cabofrio_customer_midias[]
  profissional_anexos cabofrio_profissional_anexos[]
  users_midias        cabofrio_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("cabofrio")
}

model cabofrio_financas {
  id                      BigInt                  @id @default(autoincrement())
  created_at              DateTime?               @db.Timestamptz(6)
  updated_at              DateTime?               @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            cabofrio_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                cabofrio_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           cabofrio_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("cabofrio")
}

model cabofrio_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           cabofrio_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   cabofrio_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("cabofrio")
}

model cabofrio_franquias {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  url                String?
  latitude           String?
  longitude          String?
  url_front          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros cabofrio_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("cabofrio")
}

model cabofrio_franquias_bairros {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros cabofrio_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("cabofrio")
}

model cabofrio_grupos {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos cabofrio_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("cabofrio")
}

model cabofrio_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("cabofrio")
}

model cabofrio_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("cabofrio")
}

model cabofrio_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("cabofrio")
}

model cabofrio_planos {
  id             BigInt                    @id @default(autoincrement())
  created_at     DateTime?                 @db.Timestamptz(6)
  updated_at     DateTime?                 @db.Timestamptz(6)
  deleted_at     DateTime?                 @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                  @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos cabofrio_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("cabofrio")
}

model cabofrio_precos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?           @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   cabofrio_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("cabofrio")
}

model cabofrio_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           cabofrio_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   cabofrio_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("cabofrio")
}

model cabofrio_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     cabofrio_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   cabofrio_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("cabofrio")
}

model cabofrio_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    cabofrio_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     cabofrio_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("cabofrio")
}

model cabofrio_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   cabofrio_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        cabofrio_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("cabofrio")
}

model cabofrio_profissionals {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                           @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                          @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais cabofrio_atendimento_preferencias_profissionais[]
  atendimento_profissionais              cabofrio_atendimento_profissionais[]
  customer_midias                        cabofrio_customer_midias[]
  financas                               cabofrio_financas[]
  profissional_anexos                    cabofrio_profissional_anexos[]
  profissional_disponibilidade           cabofrio_profissional_disponibilidade[]
  profissional_especialidades            cabofrio_profissional_especialidades[]
  profissional_servicos                  cabofrio_profissional_servicos[]
  enderecos                              cabofrio_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            cabofrio_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("cabofrio")
}

model cabofrio_reclamacoes {
  id                       BigInt                              @id @default(autoincrement())
  created_at               DateTime?                           @db.Timestamptz(6)
  updated_at               DateTime?                           @db.Timestamptz(6)
  deleted_at               DateTime?                           @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     cabofrio_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            cabofrio_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos cabofrio_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("cabofrio")
}

model cabofrio_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   cabofrio_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    cabofrio_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("cabofrio")
}

model cabofrio_restritos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  cliente    BigInt?
  clientes   cabofrio_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("cabofrio")
}

model cabofrio_servicos {
  id                    BigInt                           @id @default(autoincrement())
  created_at            DateTime?                        @db.Timestamptz(6)
  updated_at            DateTime?                        @db.Timestamptz(6)
  deleted_at            DateTime?                        @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  cabofrio_atendimento_servicos[]
  precos                cabofrio_precos[]
  profissional_servicos cabofrio_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("cabofrio")
}

model cabofrio_status_clientes {
  id                           BigInt                                  @id @default(autoincrement())
  created_at                   DateTime?                               @db.Timestamptz(6)
  updated_at                   DateTime?                               @db.Timestamptz(6)
  deleted_at                   DateTime?                               @db.Timestamptz(6)
  nome                         String?
  cliente_status               cabofrio_cliente_status[]
  profissional_disponibilidade cabofrio_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("cabofrio")
}

model cabofrio_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("cabofrio")
}

model cabofrio_users {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  username     String?                 @unique
  password     String?
  nome         String?
  email        String?                 @unique
  is_staff     Boolean?
  users_grupos cabofrio_users_grupos[]
  users_midias cabofrio_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("cabofrio")
}

model cabofrio_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    cabofrio_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     cabofrio_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("cabofrio")
}

model cabofrio_users_midias {
  user_id  BigInt
  files_id BigInt
  files    cabofrio_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    cabofrio_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("cabofrio")
}

model cabofrio_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("cabofrio")
}

model cabofrio_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("cabofrio")
}

model cascavel_alteracao_atendimentos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos cascavel_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("cascavel")
}

model cascavel_alteracao_campos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos cascavel_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("cascavel")
}

model cascavel_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   cascavel_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         cascavel_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("cascavel")
}

model cascavel_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   cascavel_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           cascavel_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("cascavel")
}

model cascavel_atendimento_entradas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       cascavel_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("cascavel")
}

model cascavel_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    cascavel_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   cascavel_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("cascavel")
}

model cascavel_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    cascavel_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   cascavel_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("cascavel")
}

model cascavel_atendimento_saidas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       cascavel_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("cascavel")
}

model cascavel_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   cascavel_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       cascavel_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("cascavel")
}

model cascavel_atendimentos {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                          @db.Decimal
  acrestimo                              Decimal?                                          @db.Decimal
  desconto                               Decimal?                                          @db.Decimal
  valor_total                            Decimal?                                          @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                          @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  nota                                   BigInt?
  avaliacao                              String?
  atendimento_datas                      cascavel_atendimento_datas[]
  atendimento_entradas                   cascavel_atendimento_entradas[]
  atendimento_preferencias_profissionais cascavel_atendimento_preferencias_profissionais[]
  atendimento_profissionais              cascavel_atendimento_profissionais[]
  atendimento_saidas                     cascavel_atendimento_saidas[]
  atendimento_servicos                   cascavel_atendimento_servicos[]
  clientes                               cascavel_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 cascavel_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              cascavel_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               cascavel_financas[]
  reclamacoes_atendimentos               cascavel_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("cascavel")
}

model cascavel_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    cascavel_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   cascavel_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("cascavel")
}

model cascavel_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   cascavel_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      cascavel_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("cascavel")
}

model cascavel_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   cascavel_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     cascavel_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("cascavel")
}

model cascavel_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          cascavel_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   cascavel_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("cascavel")
}

model cascavel_clientes {
  id                   BigInt                       @id @default(autoincrement())
  created_at           DateTime?                    @db.Timestamptz(6)
  updated_at           DateTime?                    @db.Timestamptz(6)
  deleted_at           DateTime?                    @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  status_novo          String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  atendimentos         cascavel_atendimentos[]
  cliente_enderecos    cascavel_cliente_enderecos[]
  cliente_midias       cascavel_cliente_midias[]
  cliente_planos       cascavel_cliente_planos[]
  cliente_status       cascavel_cliente_status[]
  financas             cascavel_financas[]
  restritos            cascavel_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("cascavel")
}

model cascavel_cupoms {
  id            BigInt                  @id @default(autoincrement())
  created_at    DateTime?               @db.Timestamptz(6)
  updated_at    DateTime?               @db.Timestamptz(6)
  deleted_at    DateTime?               @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  cascavel_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("cascavel")
}

model cascavel_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           cascavel_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   cascavel_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("cascavel")
}

model cascavel_data {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas cascavel_atendimento_datas[]
  reclamacoes       cascavel_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("cascavel")
}

model cascavel_enderecos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      cascavel_atendimentos[]
  cliente_enderecos cascavel_cliente_enderecos[]
  profissionals     cascavel_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("cascavel")
}

model cascavel_especialidades {
  id                          BigInt                                 @id @default(autoincrement())
  created_at                  DateTime?                              @db.Timestamptz(6)
  updated_at                  DateTime?                              @db.Timestamptz(6)
  deleted_at                  DateTime?                              @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades cascavel_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("cascavel")
}

model cascavel_files {
  id                  BigInt                         @id @default(autoincrement())
  created_at          DateTime?                      @db.Timestamptz(6)
  updated_at          DateTime?                      @db.Timestamptz(6)
  deleted_at          DateTime?                      @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      cascavel_cliente_midias[]
  customer_midias     cascavel_customer_midias[]
  profissional_anexos cascavel_profissional_anexos[]
  users_midias        cascavel_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("cascavel")
}

model cascavel_financas {
  id                      BigInt                  @id @default(autoincrement())
  created_at              DateTime?               @db.Timestamptz(6)
  updated_at              DateTime?               @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            cascavel_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                cascavel_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           cascavel_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("cascavel")
}

model cascavel_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           cascavel_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   cascavel_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("cascavel")
}

model cascavel_franquias {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros cascavel_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("cascavel")
}

model cascavel_franquias_bairros {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros cascavel_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("cascavel")
}

model cascavel_grupos {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos cascavel_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("cascavel")
}

model cascavel_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("cascavel")
}

model cascavel_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("cascavel")
}

model cascavel_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("cascavel")
}

model cascavel_planos {
  id             BigInt                    @id @default(autoincrement())
  created_at     DateTime?                 @db.Timestamptz(6)
  updated_at     DateTime?                 @db.Timestamptz(6)
  deleted_at     DateTime?                 @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                  @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos cascavel_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("cascavel")
}

model cascavel_precos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?           @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   cascavel_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("cascavel")
}

model cascavel_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           cascavel_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   cascavel_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("cascavel")
}

model cascavel_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     cascavel_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   cascavel_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("cascavel")
}

model cascavel_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    cascavel_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     cascavel_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("cascavel")
}

model cascavel_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   cascavel_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        cascavel_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("cascavel")
}

model cascavel_profissionals {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                           @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                          @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais cascavel_atendimento_preferencias_profissionais[]
  atendimento_profissionais              cascavel_atendimento_profissionais[]
  customer_midias                        cascavel_customer_midias[]
  financas                               cascavel_financas[]
  profissional_anexos                    cascavel_profissional_anexos[]
  profissional_disponibilidade           cascavel_profissional_disponibilidade[]
  profissional_especialidades            cascavel_profissional_especialidades[]
  profissional_servicos                  cascavel_profissional_servicos[]
  enderecos                              cascavel_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            cascavel_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("cascavel")
}

model cascavel_reclamacoes {
  id                       BigInt                              @id @default(autoincrement())
  created_at               DateTime?                           @db.Timestamptz(6)
  updated_at               DateTime?                           @db.Timestamptz(6)
  deleted_at               DateTime?                           @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     cascavel_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            cascavel_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos cascavel_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("cascavel")
}

model cascavel_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   cascavel_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    cascavel_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("cascavel")
}

model cascavel_restritos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  cliente    BigInt?
  clientes   cascavel_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("cascavel")
}

model cascavel_servicos {
  id                    BigInt                           @id @default(autoincrement())
  created_at            DateTime?                        @db.Timestamptz(6)
  updated_at            DateTime?                        @db.Timestamptz(6)
  deleted_at            DateTime?                        @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  cascavel_atendimento_servicos[]
  precos                cascavel_precos[]
  profissional_servicos cascavel_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("cascavel")
}

model cascavel_status_clientes {
  id                           BigInt                                  @id @default(autoincrement())
  created_at                   DateTime?                               @db.Timestamptz(6)
  updated_at                   DateTime?                               @db.Timestamptz(6)
  deleted_at                   DateTime?                               @db.Timestamptz(6)
  nome                         String?
  cliente_status               cascavel_cliente_status[]
  profissional_disponibilidade cascavel_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("cascavel")
}

model cascavel_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("cascavel")
}

model cascavel_users {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  username     String?                 @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                 @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos cascavel_users_grupos[]
  users_midias cascavel_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("cascavel")
}

model cascavel_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    cascavel_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     cascavel_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("cascavel")
}

model cascavel_users_midias {
  user_id  BigInt
  files_id BigInt
  files    cascavel_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    cascavel_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("cascavel")
}

model cascavel_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("cascavel")
}

model cascavel_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("cascavel")
}

model criciuma_alteracao_atendimentos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos criciuma_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("criciuma")
}

model criciuma_alteracao_campos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos criciuma_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("criciuma")
}

model criciuma_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   criciuma_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         criciuma_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("criciuma")
}

model criciuma_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   criciuma_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           criciuma_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("criciuma")
}

model criciuma_atendimento_entradas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       criciuma_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("criciuma")
}

model criciuma_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    criciuma_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   criciuma_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("criciuma")
}

model criciuma_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    criciuma_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   criciuma_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("criciuma")
}

model criciuma_atendimento_saidas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       criciuma_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("criciuma")
}

model criciuma_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   criciuma_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       criciuma_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("criciuma")
}

model criciuma_atendimentos {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                          @db.Decimal
  acrestimo                              Decimal?                                          @db.Decimal
  desconto                               Decimal?                                          @db.Decimal
  valor_total                            Decimal?                                          @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                          @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      criciuma_atendimento_datas[]
  atendimento_entradas                   criciuma_atendimento_entradas[]
  atendimento_preferencias_profissionais criciuma_atendimento_preferencias_profissionais[]
  atendimento_profissionais              criciuma_atendimento_profissionais[]
  atendimento_saidas                     criciuma_atendimento_saidas[]
  atendimento_servicos                   criciuma_atendimento_servicos[]
  clientes                               criciuma_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 criciuma_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              criciuma_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               criciuma_financas[]
  reclamacoes_atendimentos               criciuma_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("criciuma")
}

model criciuma_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    criciuma_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   criciuma_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("criciuma")
}

model criciuma_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   criciuma_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      criciuma_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("criciuma")
}

model criciuma_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   criciuma_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     criciuma_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("criciuma")
}

model criciuma_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          criciuma_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   criciuma_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("criciuma")
}

model criciuma_clientes {
  id                   BigInt                       @id @default(autoincrement())
  created_at           DateTime?                    @db.Timestamptz(6)
  updated_at           DateTime?                    @db.Timestamptz(6)
  deleted_at           DateTime?                    @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         criciuma_atendimentos[]
  cliente_enderecos    criciuma_cliente_enderecos[]
  cliente_midias       criciuma_cliente_midias[]
  cliente_planos       criciuma_cliente_planos[]
  cliente_status       criciuma_cliente_status[]
  financas             criciuma_financas[]
  restritos            criciuma_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("criciuma")
}

model criciuma_cupoms {
  id            BigInt                  @id @default(autoincrement())
  created_at    DateTime?               @db.Timestamptz(6)
  updated_at    DateTime?               @db.Timestamptz(6)
  deleted_at    DateTime?               @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  criciuma_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("criciuma")
}

model criciuma_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           criciuma_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   criciuma_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("criciuma")
}

model criciuma_data {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas criciuma_atendimento_datas[]
  reclamacoes       criciuma_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("criciuma")
}

model criciuma_enderecos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      criciuma_atendimentos[]
  cliente_enderecos criciuma_cliente_enderecos[]
  profissionals     criciuma_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("criciuma")
}

model criciuma_especialidades {
  id                          BigInt                                 @id @default(autoincrement())
  created_at                  DateTime?                              @db.Timestamptz(6)
  updated_at                  DateTime?                              @db.Timestamptz(6)
  deleted_at                  DateTime?                              @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades criciuma_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("criciuma")
}

model criciuma_files {
  id                  BigInt                         @id @default(autoincrement())
  created_at          DateTime?                      @db.Timestamptz(6)
  updated_at          DateTime?                      @db.Timestamptz(6)
  deleted_at          DateTime?                      @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      criciuma_cliente_midias[]
  customer_midias     criciuma_customer_midias[]
  profissional_anexos criciuma_profissional_anexos[]
  users_midias        criciuma_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("criciuma")
}

model criciuma_financas {
  id                      BigInt                  @id @default(autoincrement())
  created_at              DateTime?               @db.Timestamptz(6)
  updated_at              DateTime?               @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            criciuma_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                criciuma_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           criciuma_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("criciuma")
}

model criciuma_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           criciuma_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   criciuma_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("criciuma")
}

model criciuma_franquias {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  url                String?
  latitude           String?
  longitude          String?
  url_front          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros criciuma_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("criciuma")
}

model criciuma_franquias_bairros {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros criciuma_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("criciuma")
}

model criciuma_grupos {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos criciuma_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("criciuma")
}

model criciuma_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("criciuma")
}

model criciuma_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("criciuma")
}

model criciuma_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("criciuma")
}

model criciuma_planos {
  id             BigInt                    @id @default(autoincrement())
  created_at     DateTime?                 @db.Timestamptz(6)
  updated_at     DateTime?                 @db.Timestamptz(6)
  deleted_at     DateTime?                 @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                  @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos criciuma_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("criciuma")
}

model criciuma_precos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?           @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   criciuma_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("criciuma")
}

model criciuma_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           criciuma_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   criciuma_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("criciuma")
}

model criciuma_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     criciuma_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   criciuma_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("criciuma")
}

model criciuma_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    criciuma_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     criciuma_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("criciuma")
}

model criciuma_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   criciuma_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        criciuma_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("criciuma")
}

model criciuma_profissionals {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                           @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                          @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais criciuma_atendimento_preferencias_profissionais[]
  atendimento_profissionais              criciuma_atendimento_profissionais[]
  customer_midias                        criciuma_customer_midias[]
  financas                               criciuma_financas[]
  profissional_anexos                    criciuma_profissional_anexos[]
  profissional_disponibilidade           criciuma_profissional_disponibilidade[]
  profissional_especialidades            criciuma_profissional_especialidades[]
  profissional_servicos                  criciuma_profissional_servicos[]
  enderecos                              criciuma_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            criciuma_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("criciuma")
}

model criciuma_reclamacoes {
  id                       BigInt                              @id @default(autoincrement())
  created_at               DateTime?                           @db.Timestamptz(6)
  updated_at               DateTime?                           @db.Timestamptz(6)
  deleted_at               DateTime?                           @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     criciuma_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            criciuma_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos criciuma_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("criciuma")
}

model criciuma_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   criciuma_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    criciuma_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("criciuma")
}

model criciuma_restritos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  cliente    BigInt?
  clientes   criciuma_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("criciuma")
}

model criciuma_servicos {
  id                    BigInt                           @id @default(autoincrement())
  created_at            DateTime?                        @db.Timestamptz(6)
  updated_at            DateTime?                        @db.Timestamptz(6)
  deleted_at            DateTime?                        @db.Timestamptz(6)
  nome                  String?
  Limpeza_dom_stica     String?                          @map("Limpeza doméstica")
  valor                 Decimal?                         @db.Decimal
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  criciuma_atendimento_servicos[]
  precos                criciuma_precos[]
  profissional_servicos criciuma_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("criciuma")
}

model criciuma_status_clientes {
  id                           BigInt                                  @id @default(autoincrement())
  created_at                   DateTime?                               @db.Timestamptz(6)
  updated_at                   DateTime?                               @db.Timestamptz(6)
  deleted_at                   DateTime?                               @db.Timestamptz(6)
  nome                         String?
  cliente_status               criciuma_cliente_status[]
  profissional_disponibilidade criciuma_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("criciuma")
}

model criciuma_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("criciuma")
}

model criciuma_users {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  username     String?                 @unique
  password     String?
  nome         String?
  email        String?                 @unique
  is_staff     Boolean?
  users_grupos criciuma_users_grupos[]
  users_midias criciuma_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("criciuma")
}

model criciuma_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    criciuma_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     criciuma_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("criciuma")
}

model criciuma_users_midias {
  user_id  BigInt
  files_id BigInt
  files    criciuma_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    criciuma_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("criciuma")
}

model criciuma_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("criciuma")
}

model criciuma_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("criciuma")
}

model matriz_alteracao_atendimentos {
  id                BigInt                     @id @default(autoincrement())
  created_at        DateTime?                  @db.Timestamptz(6)
  updated_at        DateTime?                  @db.Timestamptz(6)
  deleted_at        DateTime?                  @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos matriz_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("matriz")
}

model matriz_alteracao_campos {
  id                     BigInt                     @id @default(autoincrement())
  created_at             DateTime?                  @db.Timestamptz(6)
  updated_at             DateTime?                  @db.Timestamptz(6)
  deleted_at             DateTime?                  @db.Timestamptz(6)
  campo_alterado         String?
  valor_anterior         String?
  valor_novo             String?
  alteracao_campos       matriz_alteracao_campos    @relation("alteracao_camposToalteracao_campos", fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos_cascade")
  other_alteracao_campos matriz_alteracao_campos?   @relation("alteracao_camposToalteracao_campos")
  alteracoes_campos      matriz_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("matriz")
}

model matriz_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   matriz_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         matriz_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("matriz")
}

model matriz_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   matriz_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           matriz_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("matriz")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model matriz_atendimento_entradas {
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?             @db.Decimal
  data_vencimento    String?
  observacoes        String?
  id                 BigInt               @default(autoincrement())
  created_at         DateTime?            @db.Timestamptz(6)
  updated_at         DateTime?            @db.Timestamptz(6)
  deleted_at         DateTime?            @db.Timestamptz(6)
  atendimentos       matriz_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@ignore
  @@schema("matriz")
}

model matriz_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    matriz_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   matriz_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("matriz")
}

model matriz_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    matriz_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   matriz_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("matriz")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model matriz_atendimento_saidas {
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?             @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  id                 BigInt               @default(autoincrement())
  created_at         DateTime?            @db.Timestamptz(6)
  updated_at         DateTime?            @db.Timestamptz(6)
  deleted_at         DateTime?            @db.Timestamptz(6)
  atendimentos       matriz_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@ignore
  @@schema("matriz")
}

model matriz_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   matriz_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       matriz_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("matriz")
}

model matriz_atendimentos {
  id                                     BigInt                                          @id @default(autoincrement())
  created_at                             DateTime?                                       @db.Timestamptz(6)
  updated_at                             DateTime?                                       @db.Timestamptz(6)
  deleted_at                             DateTime?                                       @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                        @db.Decimal
  acrestimo                              Decimal?                                        @db.Decimal
  desconto                               Decimal?                                        @db.Decimal
  valor_total                            Decimal?                                        @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                        @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      matriz_atendimento_datas[]
  atendimento_entradas                   matriz_atendimento_entradas[]                   @ignore
  atendimento_preferencias_profissionais matriz_atendimento_preferencias_profissionais[]
  atendimento_profissionais              matriz_atendimento_profissionais[]
  atendimento_saidas                     matriz_atendimento_saidas[]                     @ignore
  atendimento_servicos                   matriz_atendimento_servicos[]
  clientes                               matriz_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 matriz_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              matriz_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               matriz_financas[]
  reclamacoes_atendimentos               matriz_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("matriz")
}

model matriz_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    matriz_clientes  @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   matriz_enderecos @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("matriz")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cliente_id_to_delete {
  id BigInt?

  @@ignore
  @@schema("matriz")
}

model matriz_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   matriz_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      matriz_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("matriz")
}

model matriz_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   matriz_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     matriz_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("matriz")
}

model matriz_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          matriz_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   matriz_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("matriz")
}

model matriz_clientes {
  id                   BigInt                     @id @default(autoincrement())
  created_at           DateTime?                  @db.Timestamptz(6)
  updated_at           DateTime?                  @db.Timestamptz(6)
  deleted_at           DateTime?                  @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         matriz_atendimentos[]
  cliente_enderecos    matriz_cliente_enderecos[]
  cliente_midias       matriz_cliente_midias[]
  cliente_planos       matriz_cliente_planos[]
  cliente_status       matriz_cliente_status[]
  financas             matriz_financas[]
  restritos            matriz_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("matriz")
}

model matriz_cupoms {
  id            BigInt                @id @default(autoincrement())
  created_at    DateTime?             @db.Timestamptz(6)
  updated_at    DateTime?             @db.Timestamptz(6)
  deleted_at    DateTime?             @db.Timestamptz(6)
  nome          String?
  valor         Decimal?              @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  matriz_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("matriz")
}

model matriz_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           matriz_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   matriz_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("matriz")
}

model matriz_data {
  id                BigInt                     @id @default(autoincrement())
  created_at        DateTime?                  @db.Timestamptz(6)
  updated_at        DateTime?                  @db.Timestamptz(6)
  deleted_at        DateTime?                  @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas matriz_atendimento_datas[]
  reclamacoes       matriz_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("matriz")
}

model matriz_enderecos {
  id                BigInt                     @id @default(autoincrement())
  created_at        DateTime?                  @db.Timestamptz(6)
  updated_at        DateTime?                  @db.Timestamptz(6)
  deleted_at        DateTime?                  @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      matriz_atendimentos[]
  cliente_enderecos matriz_cliente_enderecos[]
  profissionals     matriz_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("matriz")
}

model matriz_especialidades {
  id                          BigInt                               @id @default(autoincrement())
  created_at                  DateTime?                            @db.Timestamptz(6)
  updated_at                  DateTime?                            @db.Timestamptz(6)
  deleted_at                  DateTime?                            @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades matriz_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("matriz")
}

model matriz_files {
  id                  BigInt                       @id @default(autoincrement())
  created_at          DateTime?                    @db.Timestamptz(6)
  updated_at          DateTime?                    @db.Timestamptz(6)
  deleted_at          DateTime?                    @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      matriz_cliente_midias[]
  customer_midias     matriz_customer_midias[]
  profissional_anexos matriz_profissional_anexos[]
  users_midias        matriz_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("matriz")
}

model matriz_financas {
  id                      BigInt                @id @default(autoincrement())
  created_at              DateTime?             @db.Timestamptz(6)
  updated_at              DateTime?             @db.Timestamptz(6)
  deleted_at              DateTime?             @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?              @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?              @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            matriz_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                matriz_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           matriz_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("matriz")
}

model matriz_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           matriz_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   matriz_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("matriz")
}

model matriz_franquias {
  id                 BigInt                      @id @default(autoincrement())
  created_at         DateTime?                   @db.Timestamptz(6)
  updated_at         DateTime?                   @db.Timestamptz(6)
  deleted_at         DateTime?                   @db.Timestamptz(6)
  nome               String?
  url                String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  url_front          String?
  email              String?
  numero             String?
  numero_contato     String?
  email_contato      String?
  fr_cidades_bairros matriz_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("matriz")
}

model matriz_franquias_bairros {
  id                 BigInt                      @id @default(autoincrement())
  created_at         DateTime?                   @db.Timestamptz(6)
  updated_at         DateTime?                   @db.Timestamptz(6)
  deleted_at         DateTime?                   @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros matriz_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("matriz")
}

model matriz_grupos {
  id           BigInt                @id @default(autoincrement())
  created_at   DateTime?             @db.Timestamptz(6)
  updated_at   DateTime?             @db.Timestamptz(6)
  deleted_at   DateTime?             @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos matriz_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("matriz")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model input_text {
  nome String?

  @@ignore
  @@schema("matriz")
}

model matriz_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("matriz")
}

model matriz_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("matriz")
}

model matriz_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("matriz")
}

model matriz_planos {
  id             BigInt                  @id @default(autoincrement())
  created_at     DateTime?               @db.Timestamptz(6)
  updated_at     DateTime?               @db.Timestamptz(6)
  deleted_at     DateTime?               @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos matriz_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("matriz")
}

model matriz_precos {
  id         BigInt           @id @default(autoincrement())
  created_at DateTime?        @db.Timestamptz(6)
  updated_at DateTime?        @db.Timestamptz(6)
  deleted_at DateTime?        @db.Timestamptz(6)
  valor      Decimal?         @db.Decimal
  servico_id BigInt?
  tipo       String?
  horas      BigInt?
  servicos   matriz_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("matriz")
}

model matriz_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           matriz_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   matriz_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("matriz")
}

model matriz_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     matriz_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   matriz_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("matriz")
}

model matriz_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    matriz_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     matriz_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("matriz")
}

model matriz_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   matriz_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        matriz_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("matriz")
}

model matriz_profissionals {
  id                                     BigInt                                          @id @default(autoincrement())
  created_at                             DateTime?                                       @db.Timestamptz(6)
  updated_at                             DateTime?                                       @db.Timestamptz(6)
  deleted_at                             DateTime?                                       @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                         @unique
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                        @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais matriz_atendimento_preferencias_profissionais[]
  atendimento_profissionais              matriz_atendimento_profissionais[]
  customer_midias                        matriz_customer_midias[]
  financas                               matriz_financas[]
  profissional_anexos                    matriz_profissional_anexos[]
  profissional_disponibilidade           matriz_profissional_disponibilidade[]
  profissional_especialidades            matriz_profissional_especialidades[]
  profissional_servicos                  matriz_profissional_servicos[]
  enderecos                              matriz_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            matriz_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("matriz")
}

model matriz_reclamacoes {
  id                       BigInt                            @id @default(autoincrement())
  created_at               DateTime?                         @db.Timestamptz(6)
  updated_at               DateTime?                         @db.Timestamptz(6)
  deleted_at               DateTime?                         @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     matriz_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            matriz_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos matriz_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("matriz")
}

model matriz_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   matriz_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    matriz_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("matriz")
}

model matriz_restritos {
  id         BigInt           @id @default(autoincrement())
  created_at DateTime?        @db.Timestamptz(6)
  updated_at DateTime?        @db.Timestamptz(6)
  deleted_at DateTime?        @db.Timestamptz(6)
  cliente    BigInt?
  clientes   matriz_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("matriz")
}

model matriz_servicos {
  id                    BigInt                         @id @default(autoincrement())
  created_at            DateTime?                      @db.Timestamptz(6)
  updated_at            DateTime?                      @db.Timestamptz(6)
  deleted_at            DateTime?                      @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  matriz_atendimento_servicos[]
  precos                matriz_precos[]
  profissional_servicos matriz_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("matriz")
}

model matriz_status_clientes {
  id                           BigInt                                @id @default(autoincrement())
  created_at                   DateTime?                             @db.Timestamptz(6)
  updated_at                   DateTime?                             @db.Timestamptz(6)
  deleted_at                   DateTime?                             @db.Timestamptz(6)
  nome                         String?
  cliente_status               matriz_cliente_status[]
  profissional_disponibilidade matriz_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("matriz")
}

model matriz_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("matriz")
}

model tickets {
  id                    BigInt    @id @default(autoincrement())
  created_at            DateTime? @db.Timestamptz(6)
  updated_at            DateTime? @db.Timestamptz(6)
  deleted_at            DateTime? @db.Timestamptz(6)
  nome                  String?
  ticket                String?
  tipo                  String?
  atendimento           BigInt?
  profissional          BigInt?
  cliente               BigInt?
  mensagem_cliente      String?
  mensagem_profissional String?
  data_reclamacao       String?
  solucao               String?
  valor                 String?
  observacao            String?
  rate                  BigInt?
  status_chamado        String?

  @@index([deleted_at], map: "idx_tickets_deleted_at")
  @@schema("matriz")
}

model matriz_users {
  id           BigInt                @id @default(autoincrement())
  created_at   DateTime?             @db.Timestamptz(6)
  updated_at   DateTime?             @db.Timestamptz(6)
  deleted_at   DateTime?             @db.Timestamptz(6)
  username     String?               @unique
  password     String?
  nome         String?
  email        String?               @unique
  is_staff     Boolean?
  users_grupos matriz_users_grupos[]
  users_midias matriz_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("matriz")
}

model matriz_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    matriz_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     matriz_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("matriz")
}

model matriz_users_midias {
  user_id  BigInt
  files_id BigInt
  files    matriz_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    matriz_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("matriz")
}

model matriz_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("matriz")
}

model matriz_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("matriz")
}

model morumbi_alteracao_atendimentos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos morumbi_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("morumbi")
}

model morumbi_alteracao_campos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos morumbi_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("morumbi")
}

model morumbi_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   morumbi_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         morumbi_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("morumbi")
}

model morumbi_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   morumbi_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           morumbi_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("morumbi")
}

model morumbi_atendimento_entradas {
  id                 BigInt                @id @default(autoincrement())
  created_at         DateTime?             @db.Timestamptz(6)
  updated_at         DateTime?             @db.Timestamptz(6)
  deleted_at         DateTime?             @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?              @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       morumbi_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("morumbi")
}

model morumbi_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    morumbi_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   morumbi_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("morumbi")
}

model morumbi_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    morumbi_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   morumbi_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("morumbi")
}

model morumbi_atendimento_saidas {
  id                 BigInt                @id @default(autoincrement())
  created_at         DateTime?             @db.Timestamptz(6)
  updated_at         DateTime?             @db.Timestamptz(6)
  deleted_at         DateTime?             @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?              @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       morumbi_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("morumbi")
}

model morumbi_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   morumbi_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       morumbi_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("morumbi")
}

model morumbi_atendimentos {
  id                                     BigInt                                           @id @default(autoincrement())
  created_at                             DateTime?                                        @db.Timestamptz(6)
  updated_at                             DateTime?                                        @db.Timestamptz(6)
  deleted_at                             DateTime?                                        @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                         @db.Decimal
  acrestimo                              Decimal?                                         @db.Decimal
  desconto                               Decimal?                                         @db.Decimal
  valor_total                            Decimal?                                         @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                         @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      morumbi_atendimento_datas[]
  atendimento_entradas                   morumbi_atendimento_entradas[]
  atendimento_preferencias_profissionais morumbi_atendimento_preferencias_profissionais[]
  atendimento_profissionais              morumbi_atendimento_profissionais[]
  atendimento_saidas                     morumbi_atendimento_saidas[]
  atendimento_servicos                   morumbi_atendimento_servicos[]
  clientes                               morumbi_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 morumbi_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              morumbi_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               morumbi_financas[]
  reclamacoes_atendimentos               morumbi_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("morumbi")
}

model morumbi_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    morumbi_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   morumbi_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("morumbi")
}

model morumbi_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   morumbi_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      morumbi_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("morumbi")
}

model morumbi_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   morumbi_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     morumbi_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("morumbi")
}

model morumbi_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          morumbi_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   morumbi_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("morumbi")
}

model morumbi_clientes {
  id                   BigInt                      @id @default(autoincrement())
  created_at           DateTime?                   @db.Timestamptz(6)
  updated_at           DateTime?                   @db.Timestamptz(6)
  deleted_at           DateTime?                   @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         morumbi_atendimentos[]
  cliente_enderecos    morumbi_cliente_enderecos[]
  cliente_midias       morumbi_cliente_midias[]
  cliente_planos       morumbi_cliente_planos[]
  cliente_status       morumbi_cliente_status[]
  financas             morumbi_financas[]
  restritos            morumbi_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("morumbi")
}

model morumbi_cupoms {
  id            BigInt                 @id @default(autoincrement())
  created_at    DateTime?              @db.Timestamptz(6)
  updated_at    DateTime?              @db.Timestamptz(6)
  deleted_at    DateTime?              @db.Timestamptz(6)
  nome          String?
  valor         Decimal?               @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  morumbi_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("morumbi")
}

model morumbi_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           morumbi_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   morumbi_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("morumbi")
}

model morumbi_data {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas morumbi_atendimento_datas[]
  reclamacoes       morumbi_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("morumbi")
}

model morumbi_enderecos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      morumbi_atendimentos[]
  cliente_enderecos morumbi_cliente_enderecos[]
  profissionals     morumbi_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("morumbi")
}

model morumbi_especialidades {
  id                          BigInt                                @id @default(autoincrement())
  created_at                  DateTime?                             @db.Timestamptz(6)
  updated_at                  DateTime?                             @db.Timestamptz(6)
  deleted_at                  DateTime?                             @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades morumbi_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("morumbi")
}

model morumbi_files {
  id                  BigInt                        @id @default(autoincrement())
  created_at          DateTime?                     @db.Timestamptz(6)
  updated_at          DateTime?                     @db.Timestamptz(6)
  deleted_at          DateTime?                     @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      morumbi_cliente_midias[]
  customer_midias     morumbi_customer_midias[]
  profissional_anexos morumbi_profissional_anexos[]
  users_midias        morumbi_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("morumbi")
}

model morumbi_financas {
  id                      BigInt                 @id @default(autoincrement())
  created_at              DateTime?              @db.Timestamptz(6)
  updated_at              DateTime?              @db.Timestamptz(6)
  deleted_at              DateTime?              @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?               @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?               @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            morumbi_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                morumbi_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           morumbi_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("morumbi")
}

model morumbi_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           morumbi_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   morumbi_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("morumbi")
}

model morumbi_franquias {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  nome               String?
  url                String?
  latitude           String?
  longitude          String?
  url_front          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros morumbi_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("morumbi")
}

model morumbi_franquias_bairros {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros morumbi_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("morumbi")
}

model morumbi_grupos {
  id           BigInt                 @id @default(autoincrement())
  created_at   DateTime?              @db.Timestamptz(6)
  updated_at   DateTime?              @db.Timestamptz(6)
  deleted_at   DateTime?              @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos morumbi_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("morumbi")
}

model morumbi_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("morumbi")
}

model morumbi_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("morumbi")
}

model morumbi_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("morumbi")
}

model morumbi_planos {
  id             BigInt                   @id @default(autoincrement())
  created_at     DateTime?                @db.Timestamptz(6)
  updated_at     DateTime?                @db.Timestamptz(6)
  deleted_at     DateTime?                @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                 @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos morumbi_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("morumbi")
}

model morumbi_precos {
  id         BigInt            @id @default(autoincrement())
  created_at DateTime?         @db.Timestamptz(6)
  updated_at DateTime?         @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?          @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   morumbi_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("morumbi")
}

model morumbi_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           morumbi_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   morumbi_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("morumbi")
}

model morumbi_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     morumbi_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   morumbi_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("morumbi")
}

model morumbi_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    morumbi_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     morumbi_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("morumbi")
}

model morumbi_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   morumbi_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        morumbi_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("morumbi")
}

model morumbi_profissionals {
  id                                     BigInt                                           @id @default(autoincrement())
  created_at                             DateTime?                                        @db.Timestamptz(6)
  updated_at                             DateTime?                                        @db.Timestamptz(6)
  deleted_at                             DateTime?                                        @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                          @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                         @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais morumbi_atendimento_preferencias_profissionais[]
  atendimento_profissionais              morumbi_atendimento_profissionais[]
  customer_midias                        morumbi_customer_midias[]
  financas                               morumbi_financas[]
  profissional_anexos                    morumbi_profissional_anexos[]
  profissional_disponibilidade           morumbi_profissional_disponibilidade[]
  profissional_especialidades            morumbi_profissional_especialidades[]
  profissional_servicos                  morumbi_profissional_servicos[]
  enderecos                              morumbi_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            morumbi_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("morumbi")
}

model morumbi_reclamacoes {
  id                       BigInt                             @id @default(autoincrement())
  created_at               DateTime?                          @db.Timestamptz(6)
  updated_at               DateTime?                          @db.Timestamptz(6)
  deleted_at               DateTime?                          @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     morumbi_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            morumbi_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos morumbi_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("morumbi")
}

model morumbi_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   morumbi_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    morumbi_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("morumbi")
}

model morumbi_restritos {
  id         BigInt            @id @default(autoincrement())
  created_at DateTime?         @db.Timestamptz(6)
  updated_at DateTime?         @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  cliente    BigInt?
  clientes   morumbi_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("morumbi")
}

model morumbi_servicos {
  id                    BigInt                          @id @default(autoincrement())
  created_at            DateTime?                       @db.Timestamptz(6)
  updated_at            DateTime?                       @db.Timestamptz(6)
  deleted_at            DateTime?                       @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  morumbi_atendimento_servicos[]
  precos                morumbi_precos[]
  profissional_servicos morumbi_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("morumbi")
}

model morumbi_status_clientes {
  id                           BigInt                                 @id @default(autoincrement())
  created_at                   DateTime?                              @db.Timestamptz(6)
  updated_at                   DateTime?                              @db.Timestamptz(6)
  deleted_at                   DateTime?                              @db.Timestamptz(6)
  nome                         String?
  cliente_status               morumbi_cliente_status[]
  profissional_disponibilidade morumbi_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("morumbi")
}

model morumbi_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("morumbi")
}

model morumbi_users {
  id           BigInt                 @id @default(autoincrement())
  created_at   DateTime?              @db.Timestamptz(6)
  updated_at   DateTime?              @db.Timestamptz(6)
  deleted_at   DateTime?              @db.Timestamptz(6)
  username     String?                @unique
  password     String?
  nome         String?
  email        String?                @unique
  is_staff     Boolean?
  users_grupos morumbi_users_grupos[]
  users_midias morumbi_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("morumbi")
}

model morumbi_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    morumbi_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     morumbi_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("morumbi")
}

model morumbi_users_midias {
  user_id  BigInt
  files_id BigInt
  files    morumbi_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    morumbi_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("morumbi")
}

model morumbi_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("morumbi")
}

model morumbi_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("morumbi")
}

model petropolis_alteracao_atendimentos {
  id                BigInt                         @id @default(autoincrement())
  created_at        DateTime?                      @db.Timestamptz(6)
  updated_at        DateTime?                      @db.Timestamptz(6)
  deleted_at        DateTime?                      @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos petropolis_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("petropolis")
}

model petropolis_alteracao_campos {
  id                BigInt                         @id @default(autoincrement())
  created_at        DateTime?                      @db.Timestamptz(6)
  updated_at        DateTime?                      @db.Timestamptz(6)
  deleted_at        DateTime?                      @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos petropolis_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("petropolis")
}

model petropolis_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   petropolis_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         petropolis_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("petropolis")
}

model petropolis_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   petropolis_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           petropolis_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("petropolis")
}

model petropolis_atendimento_entradas {
  id                 BigInt                   @id @default(autoincrement())
  created_at         DateTime?                @db.Timestamptz(6)
  updated_at         DateTime?                @db.Timestamptz(6)
  deleted_at         DateTime?                @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?                 @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       petropolis_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("petropolis")
}

model petropolis_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    petropolis_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   petropolis_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("petropolis")
}

model petropolis_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    petropolis_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   petropolis_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("petropolis")
}

model petropolis_atendimento_saidas {
  id                 BigInt                   @id @default(autoincrement())
  created_at         DateTime?                @db.Timestamptz(6)
  updated_at         DateTime?                @db.Timestamptz(6)
  deleted_at         DateTime?                @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?                 @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       petropolis_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("petropolis")
}

model petropolis_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   petropolis_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       petropolis_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("petropolis")
}

model petropolis_atendimentos {
  id                                     BigInt                                              @id @default(autoincrement())
  created_at                             DateTime?                                           @db.Timestamptz(6)
  updated_at                             DateTime?                                           @db.Timestamptz(6)
  deleted_at                             DateTime?                                           @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                            @db.Decimal
  acrestimo                              Decimal?                                            @db.Decimal
  desconto                               Decimal?                                            @db.Decimal
  valor_total                            Decimal?                                            @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                            @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  nota                                   BigInt?
  avaliacao                              String?
  atendimento_datas                      petropolis_atendimento_datas[]
  atendimento_entradas                   petropolis_atendimento_entradas[]
  atendimento_preferencias_profissionais petropolis_atendimento_preferencias_profissionais[]
  atendimento_profissionais              petropolis_atendimento_profissionais[]
  atendimento_saidas                     petropolis_atendimento_saidas[]
  atendimento_servicos                   petropolis_atendimento_servicos[]
  clientes                               petropolis_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 petropolis_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              petropolis_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               petropolis_financas[]
  reclamacoes_atendimentos               petropolis_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("petropolis")
}

model petropolis_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    petropolis_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   petropolis_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("petropolis")
}

model petropolis_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   petropolis_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      petropolis_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("petropolis")
}

model petropolis_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   petropolis_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     petropolis_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("petropolis")
}

model petropolis_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          petropolis_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   petropolis_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("petropolis")
}

model petropolis_clientes {
  id                   BigInt                         @id @default(autoincrement())
  created_at           DateTime?                      @db.Timestamptz(6)
  updated_at           DateTime?                      @db.Timestamptz(6)
  deleted_at           DateTime?                      @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  status_novo          String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  atendimentos         petropolis_atendimentos[]
  cliente_enderecos    petropolis_cliente_enderecos[]
  cliente_midias       petropolis_cliente_midias[]
  cliente_planos       petropolis_cliente_planos[]
  cliente_status       petropolis_cliente_status[]
  financas             petropolis_financas[]
  restritos            petropolis_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("petropolis")
}

model petropolis_cupoms {
  id            BigInt                    @id @default(autoincrement())
  created_at    DateTime?                 @db.Timestamptz(6)
  updated_at    DateTime?                 @db.Timestamptz(6)
  deleted_at    DateTime?                 @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                  @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  petropolis_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("petropolis")
}

model petropolis_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           petropolis_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   petropolis_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("petropolis")
}

model petropolis_data {
  id                BigInt                         @id @default(autoincrement())
  created_at        DateTime?                      @db.Timestamptz(6)
  updated_at        DateTime?                      @db.Timestamptz(6)
  deleted_at        DateTime?                      @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas petropolis_atendimento_datas[]
  reclamacoes       petropolis_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("petropolis")
}

model petropolis_enderecos {
  id                BigInt                         @id @default(autoincrement())
  created_at        DateTime?                      @db.Timestamptz(6)
  updated_at        DateTime?                      @db.Timestamptz(6)
  deleted_at        DateTime?                      @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      petropolis_atendimentos[]
  cliente_enderecos petropolis_cliente_enderecos[]
  profissionals     petropolis_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("petropolis")
}

model petropolis_especialidades {
  id                          BigInt                                   @id @default(autoincrement())
  created_at                  DateTime?                                @db.Timestamptz(6)
  updated_at                  DateTime?                                @db.Timestamptz(6)
  deleted_at                  DateTime?                                @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades petropolis_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("petropolis")
}

model petropolis_files {
  id                  BigInt                           @id @default(autoincrement())
  created_at          DateTime?                        @db.Timestamptz(6)
  updated_at          DateTime?                        @db.Timestamptz(6)
  deleted_at          DateTime?                        @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      petropolis_cliente_midias[]
  customer_midias     petropolis_customer_midias[]
  profissional_anexos petropolis_profissional_anexos[]
  users_midias        petropolis_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("petropolis")
}

model petropolis_financas {
  id                      BigInt                    @id @default(autoincrement())
  created_at              DateTime?                 @db.Timestamptz(6)
  updated_at              DateTime?                 @db.Timestamptz(6)
  deleted_at              DateTime?                 @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                  @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                  @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            petropolis_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                petropolis_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           petropolis_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("petropolis")
}

model petropolis_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           petropolis_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   petropolis_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("petropolis")
}

model petropolis_franquias {
  id                 BigInt                          @id @default(autoincrement())
  created_at         DateTime?                       @db.Timestamptz(6)
  updated_at         DateTime?                       @db.Timestamptz(6)
  deleted_at         DateTime?                       @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros petropolis_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("petropolis")
}

model petropolis_franquias_bairros {
  id                 BigInt                          @id @default(autoincrement())
  created_at         DateTime?                       @db.Timestamptz(6)
  updated_at         DateTime?                       @db.Timestamptz(6)
  deleted_at         DateTime?                       @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros petropolis_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("petropolis")
}

model petropolis_grupos {
  id           BigInt                    @id @default(autoincrement())
  created_at   DateTime?                 @db.Timestamptz(6)
  updated_at   DateTime?                 @db.Timestamptz(6)
  deleted_at   DateTime?                 @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos petropolis_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("petropolis")
}

model petropolis_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("petropolis")
}

model petropolis_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("petropolis")
}

model petropolis_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("petropolis")
}

model petropolis_planos {
  id             BigInt                      @id @default(autoincrement())
  created_at     DateTime?                   @db.Timestamptz(6)
  updated_at     DateTime?                   @db.Timestamptz(6)
  deleted_at     DateTime?                   @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                    @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos petropolis_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("petropolis")
}

model petropolis_precos {
  id         BigInt               @id @default(autoincrement())
  created_at DateTime?            @db.Timestamptz(6)
  updated_at DateTime?            @db.Timestamptz(6)
  deleted_at DateTime?            @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?             @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   petropolis_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("petropolis")
}

model petropolis_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           petropolis_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   petropolis_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("petropolis")
}

model petropolis_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     petropolis_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   petropolis_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("petropolis")
}

model petropolis_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    petropolis_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     petropolis_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("petropolis")
}

model petropolis_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   petropolis_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        petropolis_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("petropolis")
}

model petropolis_profissionals {
  id                                     BigInt                                              @id @default(autoincrement())
  created_at                             DateTime?                                           @db.Timestamptz(6)
  updated_at                             DateTime?                                           @db.Timestamptz(6)
  deleted_at                             DateTime?                                           @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                             @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                            @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais petropolis_atendimento_preferencias_profissionais[]
  atendimento_profissionais              petropolis_atendimento_profissionais[]
  customer_midias                        petropolis_customer_midias[]
  financas                               petropolis_financas[]
  profissional_anexos                    petropolis_profissional_anexos[]
  profissional_disponibilidade           petropolis_profissional_disponibilidade[]
  profissional_especialidades            petropolis_profissional_especialidades[]
  profissional_servicos                  petropolis_profissional_servicos[]
  enderecos                              petropolis_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            petropolis_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("petropolis")
}

model petropolis_reclamacoes {
  id                       BigInt                                @id @default(autoincrement())
  created_at               DateTime?                             @db.Timestamptz(6)
  updated_at               DateTime?                             @db.Timestamptz(6)
  deleted_at               DateTime?                             @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     petropolis_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            petropolis_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos petropolis_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("petropolis")
}

model petropolis_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   petropolis_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    petropolis_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("petropolis")
}

model petropolis_restritos {
  id         BigInt               @id @default(autoincrement())
  created_at DateTime?            @db.Timestamptz(6)
  updated_at DateTime?            @db.Timestamptz(6)
  deleted_at DateTime?            @db.Timestamptz(6)
  cliente    BigInt?
  clientes   petropolis_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("petropolis")
}

model petropolis_servicos {
  id                    BigInt                             @id @default(autoincrement())
  created_at            DateTime?                          @db.Timestamptz(6)
  updated_at            DateTime?                          @db.Timestamptz(6)
  deleted_at            DateTime?                          @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  petropolis_atendimento_servicos[]
  precos                petropolis_precos[]
  profissional_servicos petropolis_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("petropolis")
}

model petropolis_status_clientes {
  id                           BigInt                                    @id @default(autoincrement())
  created_at                   DateTime?                                 @db.Timestamptz(6)
  updated_at                   DateTime?                                 @db.Timestamptz(6)
  deleted_at                   DateTime?                                 @db.Timestamptz(6)
  nome                         String?
  cliente_status               petropolis_cliente_status[]
  profissional_disponibilidade petropolis_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("petropolis")
}

model petropolis_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("petropolis")
}

model petropolis_users {
  id           BigInt                    @id @default(autoincrement())
  created_at   DateTime?                 @db.Timestamptz(6)
  updated_at   DateTime?                 @db.Timestamptz(6)
  deleted_at   DateTime?                 @db.Timestamptz(6)
  username     String?                   @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                   @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos petropolis_users_grupos[]
  users_midias petropolis_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("petropolis")
}

model petropolis_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    petropolis_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     petropolis_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("petropolis")
}

model petropolis_users_midias {
  user_id  BigInt
  files_id BigInt
  files    petropolis_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    petropolis_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("petropolis")
}

model petropolis_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("petropolis")
}

model petropolis_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("petropolis")
}

model salvador_alteracao_atendimentos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos salvador_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("salvador")
}

model salvador_alteracao_campos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos salvador_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("salvador")
}

model salvador_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   salvador_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         salvador_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("salvador")
}

model salvador_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   salvador_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           salvador_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("salvador")
}

model salvador_atendimento_entradas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       salvador_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("salvador")
}

model salvador_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    salvador_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   salvador_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("salvador")
}

model salvador_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    salvador_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   salvador_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("salvador")
}

model salvador_atendimento_saidas {
  id                 BigInt                 @id @default(autoincrement())
  created_at         DateTime?              @db.Timestamptz(6)
  updated_at         DateTime?              @db.Timestamptz(6)
  deleted_at         DateTime?              @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?               @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       salvador_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("salvador")
}

model salvador_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   salvador_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       salvador_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("salvador")
}

model salvador_atendimentos {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                          @db.Decimal
  acrestimo                              Decimal?                                          @db.Decimal
  desconto                               Decimal?                                          @db.Decimal
  valor_total                            Decimal?                                          @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                          @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      salvador_atendimento_datas[]
  atendimento_entradas                   salvador_atendimento_entradas[]
  atendimento_preferencias_profissionais salvador_atendimento_preferencias_profissionais[]
  atendimento_profissionais              salvador_atendimento_profissionais[]
  atendimento_saidas                     salvador_atendimento_saidas[]
  atendimento_servicos                   salvador_atendimento_servicos[]
  clientes                               salvador_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 salvador_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              salvador_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               salvador_financas[]
  reclamacoes_atendimentos               salvador_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("salvador")
}

model salvador_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    salvador_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   salvador_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("salvador")
}

model salvador_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   salvador_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      salvador_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("salvador")
}

model salvador_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   salvador_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     salvador_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("salvador")
}

model salvador_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          salvador_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   salvador_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("salvador")
}

model salvador_clientes {
  id                   BigInt                       @id @default(autoincrement())
  created_at           DateTime?                    @db.Timestamptz(6)
  updated_at           DateTime?                    @db.Timestamptz(6)
  deleted_at           DateTime?                    @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         salvador_atendimentos[]
  cliente_enderecos    salvador_cliente_enderecos[]
  cliente_midias       salvador_cliente_midias[]
  cliente_planos       salvador_cliente_planos[]
  cliente_status       salvador_cliente_status[]
  financas             salvador_financas[]
  restritos            salvador_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("salvador")
}

model salvador_cupoms {
  id            BigInt                  @id @default(autoincrement())
  created_at    DateTime?               @db.Timestamptz(6)
  updated_at    DateTime?               @db.Timestamptz(6)
  deleted_at    DateTime?               @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  salvador_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("salvador")
}

model salvador_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           salvador_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   salvador_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("salvador")
}

model salvador_data {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas salvador_atendimento_datas[]
  reclamacoes       salvador_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("salvador")
}

model salvador_enderecos {
  id                BigInt                       @id @default(autoincrement())
  created_at        DateTime?                    @db.Timestamptz(6)
  updated_at        DateTime?                    @db.Timestamptz(6)
  deleted_at        DateTime?                    @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      salvador_atendimentos[]
  cliente_enderecos salvador_cliente_enderecos[]
  profissionals     salvador_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("salvador")
}

model salvador_especialidades {
  id                          BigInt                                 @id @default(autoincrement())
  created_at                  DateTime?                              @db.Timestamptz(6)
  updated_at                  DateTime?                              @db.Timestamptz(6)
  deleted_at                  DateTime?                              @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades salvador_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("salvador")
}

model salvador_files {
  id                  BigInt                         @id @default(autoincrement())
  created_at          DateTime?                      @db.Timestamptz(6)
  updated_at          DateTime?                      @db.Timestamptz(6)
  deleted_at          DateTime?                      @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      salvador_cliente_midias[]
  customer_midias     salvador_customer_midias[]
  profissional_anexos salvador_profissional_anexos[]
  users_midias        salvador_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("salvador")
}

model salvador_financas {
  id                      BigInt                  @id @default(autoincrement())
  created_at              DateTime?               @db.Timestamptz(6)
  updated_at              DateTime?               @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            salvador_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                salvador_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           salvador_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("salvador")
}

model salvador_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           salvador_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   salvador_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("salvador")
}

model salvador_franquias {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros salvador_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("salvador")
}

model salvador_franquias_bairros {
  id                 BigInt                        @id @default(autoincrement())
  created_at         DateTime?                     @db.Timestamptz(6)
  updated_at         DateTime?                     @db.Timestamptz(6)
  deleted_at         DateTime?                     @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros salvador_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("salvador")
}

model salvador_grupos {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos salvador_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("salvador")
}

model salvador_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("salvador")
}

model salvador_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("salvador")
}

model salvador_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("salvador")
}

model salvador_planos {
  id             BigInt                    @id @default(autoincrement())
  created_at     DateTime?                 @db.Timestamptz(6)
  updated_at     DateTime?                 @db.Timestamptz(6)
  deleted_at     DateTime?                 @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                  @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos salvador_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("salvador")
}

model salvador_precos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?           @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   salvador_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("salvador")
}

model salvador_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           salvador_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   salvador_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("salvador")
}

model salvador_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     salvador_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   salvador_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("salvador")
}

model salvador_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    salvador_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     salvador_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("salvador")
}

model salvador_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   salvador_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        salvador_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("salvador")
}

model salvador_profissionals {
  id                                     BigInt                                            @id @default(autoincrement())
  created_at                             DateTime?                                         @db.Timestamptz(6)
  updated_at                             DateTime?                                         @db.Timestamptz(6)
  deleted_at                             DateTime?                                         @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                           @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                          @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais salvador_atendimento_preferencias_profissionais[]
  atendimento_profissionais              salvador_atendimento_profissionais[]
  customer_midias                        salvador_customer_midias[]
  financas                               salvador_financas[]
  profissional_anexos                    salvador_profissional_anexos[]
  profissional_disponibilidade           salvador_profissional_disponibilidade[]
  profissional_especialidades            salvador_profissional_especialidades[]
  profissional_servicos                  salvador_profissional_servicos[]
  enderecos                              salvador_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            salvador_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("salvador")
}

model salvador_reclamacoes {
  id                       BigInt                              @id @default(autoincrement())
  created_at               DateTime?                           @db.Timestamptz(6)
  updated_at               DateTime?                           @db.Timestamptz(6)
  deleted_at               DateTime?                           @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     salvador_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            salvador_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos salvador_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("salvador")
}

model salvador_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   salvador_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    salvador_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("salvador")
}

model salvador_restritos {
  id         BigInt             @id @default(autoincrement())
  created_at DateTime?          @db.Timestamptz(6)
  updated_at DateTime?          @db.Timestamptz(6)
  deleted_at DateTime?          @db.Timestamptz(6)
  cliente    BigInt?
  clientes   salvador_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("salvador")
}

model salvador_servicos {
  id                    BigInt                           @id @default(autoincrement())
  created_at            DateTime?                        @db.Timestamptz(6)
  updated_at            DateTime?                        @db.Timestamptz(6)
  deleted_at            DateTime?                        @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  salvador_atendimento_servicos[]
  precos                salvador_precos[]
  profissional_servicos salvador_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("salvador")
}

model salvador_status_clientes {
  id                           BigInt                                  @id @default(autoincrement())
  created_at                   DateTime?                               @db.Timestamptz(6)
  updated_at                   DateTime?                               @db.Timestamptz(6)
  deleted_at                   DateTime?                               @db.Timestamptz(6)
  nome                         String?
  cliente_status               salvador_cliente_status[]
  profissional_disponibilidade salvador_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("salvador")
}

model salvador_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("salvador")
}

model salvador_users {
  id           BigInt                  @id @default(autoincrement())
  created_at   DateTime?               @db.Timestamptz(6)
  updated_at   DateTime?               @db.Timestamptz(6)
  deleted_at   DateTime?               @db.Timestamptz(6)
  username     String?                 @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                 @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos salvador_users_grupos[]
  users_midias salvador_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("salvador")
}

model salvador_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    salvador_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     salvador_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("salvador")
}

model salvador_users_midias {
  user_id  BigInt
  files_id BigInt
  files    salvador_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    salvador_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("salvador")
}

model salvador_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("salvador")
}

model salvador_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("salvador")
}

model santo_amaro_alteracao_atendimentos {
  id                BigInt                          @id @default(autoincrement())
  created_at        DateTime?                       @db.Timestamptz(6)
  updated_at        DateTime?                       @db.Timestamptz(6)
  deleted_at        DateTime?                       @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos santo_amaro_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("santo_amaro")
}

model santo_amaro_alteracao_campos {
  id                BigInt                          @id @default(autoincrement())
  created_at        DateTime?                       @db.Timestamptz(6)
  updated_at        DateTime?                       @db.Timestamptz(6)
  deleted_at        DateTime?                       @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos santo_amaro_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("santo_amaro")
}

model santo_amaro_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   santo_amaro_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         santo_amaro_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("santo_amaro")
}

model santo_amaro_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   santo_amaro_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           santo_amaro_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("santo_amaro")
}

model santo_amaro_atendimento_entradas {
  id                 BigInt                    @id @default(autoincrement())
  created_at         DateTime?                 @db.Timestamptz(6)
  updated_at         DateTime?                 @db.Timestamptz(6)
  deleted_at         DateTime?                 @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?                  @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       santo_amaro_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("santo_amaro")
}

model santo_amaro_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    santo_amaro_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   santo_amaro_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("santo_amaro")
}

model santo_amaro_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    santo_amaro_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   santo_amaro_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("santo_amaro")
}

model santo_amaro_atendimento_saidas {
  id                 BigInt                    @id @default(autoincrement())
  created_at         DateTime?                 @db.Timestamptz(6)
  updated_at         DateTime?                 @db.Timestamptz(6)
  deleted_at         DateTime?                 @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?                  @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       santo_amaro_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("santo_amaro")
}

model santo_amaro_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   santo_amaro_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       santo_amaro_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("santo_amaro")
}

model santo_amaro_atendimentos {
  id                                     BigInt                                               @id @default(autoincrement())
  created_at                             DateTime?                                            @db.Timestamptz(6)
  updated_at                             DateTime?                                            @db.Timestamptz(6)
  deleted_at                             DateTime?                                            @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                             @db.Decimal
  acrestimo                              Decimal?                                             @db.Decimal
  desconto                               Decimal?                                             @db.Decimal
  valor_total                            Decimal?                                             @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                             @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  nota                                   BigInt?
  avaliacao                              String?
  atendimento_datas                      santo_amaro_atendimento_datas[]
  atendimento_entradas                   santo_amaro_atendimento_entradas[]
  atendimento_preferencias_profissionais santo_amaro_atendimento_preferencias_profissionais[]
  atendimento_profissionais              santo_amaro_atendimento_profissionais[]
  atendimento_saidas                     santo_amaro_atendimento_saidas[]
  atendimento_servicos                   santo_amaro_atendimento_servicos[]
  clientes                               santo_amaro_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 santo_amaro_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              santo_amaro_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               santo_amaro_financas[]
  reclamacoes_atendimentos               santo_amaro_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("santo_amaro")
}

model santo_amaro_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    santo_amaro_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   santo_amaro_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("santo_amaro")
}

model santo_amaro_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   santo_amaro_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      santo_amaro_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("santo_amaro")
}

model santo_amaro_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   santo_amaro_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     santo_amaro_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("santo_amaro")
}

model santo_amaro_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          santo_amaro_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   santo_amaro_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("santo_amaro")
}

model santo_amaro_clientes {
  id                   BigInt                          @id @default(autoincrement())
  created_at           DateTime?                       @db.Timestamptz(6)
  updated_at           DateTime?                       @db.Timestamptz(6)
  deleted_at           DateTime?                       @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  status_novo          String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  atendimentos         santo_amaro_atendimentos[]
  cliente_enderecos    santo_amaro_cliente_enderecos[]
  cliente_midias       santo_amaro_cliente_midias[]
  cliente_planos       santo_amaro_cliente_planos[]
  cliente_status       santo_amaro_cliente_status[]
  financas             santo_amaro_financas[]
  restritos            santo_amaro_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("santo_amaro")
}

model santo_amaro_cupoms {
  id            BigInt                     @id @default(autoincrement())
  created_at    DateTime?                  @db.Timestamptz(6)
  updated_at    DateTime?                  @db.Timestamptz(6)
  deleted_at    DateTime?                  @db.Timestamptz(6)
  nome          String?
  valor         Decimal?                   @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  santo_amaro_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("santo_amaro")
}

model santo_amaro_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           santo_amaro_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   santo_amaro_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("santo_amaro")
}

model santo_amaro_data {
  id                BigInt                          @id @default(autoincrement())
  created_at        DateTime?                       @db.Timestamptz(6)
  updated_at        DateTime?                       @db.Timestamptz(6)
  deleted_at        DateTime?                       @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas santo_amaro_atendimento_datas[]
  reclamacoes       santo_amaro_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("santo_amaro")
}

model santo_amaro_enderecos {
  id                BigInt                          @id @default(autoincrement())
  created_at        DateTime?                       @db.Timestamptz(6)
  updated_at        DateTime?                       @db.Timestamptz(6)
  deleted_at        DateTime?                       @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      santo_amaro_atendimentos[]
  cliente_enderecos santo_amaro_cliente_enderecos[]
  profissionals     santo_amaro_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("santo_amaro")
}

model santo_amaro_especialidades {
  id                          BigInt                                    @id @default(autoincrement())
  created_at                  DateTime?                                 @db.Timestamptz(6)
  updated_at                  DateTime?                                 @db.Timestamptz(6)
  deleted_at                  DateTime?                                 @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades santo_amaro_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("santo_amaro")
}

model santo_amaro_files {
  id                  BigInt                            @id @default(autoincrement())
  created_at          DateTime?                         @db.Timestamptz(6)
  updated_at          DateTime?                         @db.Timestamptz(6)
  deleted_at          DateTime?                         @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      santo_amaro_cliente_midias[]
  customer_midias     santo_amaro_customer_midias[]
  profissional_anexos santo_amaro_profissional_anexos[]
  users_midias        santo_amaro_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("santo_amaro")
}

model santo_amaro_financas {
  id                      BigInt                     @id @default(autoincrement())
  created_at              DateTime?                  @db.Timestamptz(6)
  updated_at              DateTime?                  @db.Timestamptz(6)
  deleted_at              DateTime?                  @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?                   @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?                   @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            santo_amaro_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                santo_amaro_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           santo_amaro_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("santo_amaro")
}

model santo_amaro_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           santo_amaro_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   santo_amaro_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("santo_amaro")
}

model santo_amaro_franquias {
  id                 BigInt                           @id @default(autoincrement())
  created_at         DateTime?                        @db.Timestamptz(6)
  updated_at         DateTime?                        @db.Timestamptz(6)
  deleted_at         DateTime?                        @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros santo_amaro_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("santo_amaro")
}

model santo_amaro_franquias_bairros {
  id                 BigInt                           @id @default(autoincrement())
  created_at         DateTime?                        @db.Timestamptz(6)
  updated_at         DateTime?                        @db.Timestamptz(6)
  deleted_at         DateTime?                        @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros santo_amaro_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("santo_amaro")
}

model santo_amaro_grupos {
  id           BigInt                     @id @default(autoincrement())
  created_at   DateTime?                  @db.Timestamptz(6)
  updated_at   DateTime?                  @db.Timestamptz(6)
  deleted_at   DateTime?                  @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos santo_amaro_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("santo_amaro")
}

model santo_amaro_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("santo_amaro")
}

model santo_amaro_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("santo_amaro")
}

model santo_amaro_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("santo_amaro")
}

model santo_amaro_planos {
  id             BigInt                       @id @default(autoincrement())
  created_at     DateTime?                    @db.Timestamptz(6)
  updated_at     DateTime?                    @db.Timestamptz(6)
  deleted_at     DateTime?                    @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                     @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos santo_amaro_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("santo_amaro")
}

model santo_amaro_precos {
  id         BigInt                @id @default(autoincrement())
  created_at DateTime?             @db.Timestamptz(6)
  updated_at DateTime?             @db.Timestamptz(6)
  deleted_at DateTime?             @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?              @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   santo_amaro_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("santo_amaro")
}

model santo_amaro_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           santo_amaro_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   santo_amaro_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("santo_amaro")
}

model santo_amaro_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     santo_amaro_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   santo_amaro_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("santo_amaro")
}

model santo_amaro_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    santo_amaro_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     santo_amaro_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("santo_amaro")
}

model santo_amaro_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   santo_amaro_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        santo_amaro_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("santo_amaro")
}

model santo_amaro_profissionals {
  id                                     BigInt                                               @id @default(autoincrement())
  created_at                             DateTime?                                            @db.Timestamptz(6)
  updated_at                             DateTime?                                            @db.Timestamptz(6)
  deleted_at                             DateTime?                                            @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                              @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                             @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais santo_amaro_atendimento_preferencias_profissionais[]
  atendimento_profissionais              santo_amaro_atendimento_profissionais[]
  customer_midias                        santo_amaro_customer_midias[]
  financas                               santo_amaro_financas[]
  profissional_anexos                    santo_amaro_profissional_anexos[]
  profissional_disponibilidade           santo_amaro_profissional_disponibilidade[]
  profissional_especialidades            santo_amaro_profissional_especialidades[]
  profissional_servicos                  santo_amaro_profissional_servicos[]
  enderecos                              santo_amaro_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            santo_amaro_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("santo_amaro")
}

model santo_amaro_reclamacoes {
  id                       BigInt                                 @id @default(autoincrement())
  created_at               DateTime?                              @db.Timestamptz(6)
  updated_at               DateTime?                              @db.Timestamptz(6)
  deleted_at               DateTime?                              @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     santo_amaro_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            santo_amaro_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos santo_amaro_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("santo_amaro")
}

model santo_amaro_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   santo_amaro_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    santo_amaro_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("santo_amaro")
}

model santo_amaro_restritos {
  id         BigInt                @id @default(autoincrement())
  created_at DateTime?             @db.Timestamptz(6)
  updated_at DateTime?             @db.Timestamptz(6)
  deleted_at DateTime?             @db.Timestamptz(6)
  cliente    BigInt?
  clientes   santo_amaro_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("santo_amaro")
}

model santo_amaro_servicos {
  id                    BigInt                              @id @default(autoincrement())
  created_at            DateTime?                           @db.Timestamptz(6)
  updated_at            DateTime?                           @db.Timestamptz(6)
  deleted_at            DateTime?                           @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  santo_amaro_atendimento_servicos[]
  precos                santo_amaro_precos[]
  profissional_servicos santo_amaro_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("santo_amaro")
}

model santo_amaro_status_clientes {
  id                           BigInt                                     @id @default(autoincrement())
  created_at                   DateTime?                                  @db.Timestamptz(6)
  updated_at                   DateTime?                                  @db.Timestamptz(6)
  deleted_at                   DateTime?                                  @db.Timestamptz(6)
  nome                         String?
  cliente_status               santo_amaro_cliente_status[]
  profissional_disponibilidade santo_amaro_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("santo_amaro")
}

model santo_amaro_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("santo_amaro")
}

model santo_amaro_users {
  id           BigInt                     @id @default(autoincrement())
  created_at   DateTime?                  @db.Timestamptz(6)
  updated_at   DateTime?                  @db.Timestamptz(6)
  deleted_at   DateTime?                  @db.Timestamptz(6)
  username     String?                    @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                    @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos santo_amaro_users_grupos[]
  users_midias santo_amaro_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("santo_amaro")
}

model santo_amaro_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    santo_amaro_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     santo_amaro_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("santo_amaro")
}

model santo_amaro_users_midias {
  user_id  BigInt
  files_id BigInt
  files    santo_amaro_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    santo_amaro_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("santo_amaro")
}

model santo_amaro_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("santo_amaro")
}

model santo_amaro_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("santo_amaro")
}

model tatuape_alteracao_atendimentos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  atendimento_id    BigInt?
  usuario           String?
  data              String?
  alteracoes_campos tatuape_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_atendimentos_deleted_at")
  @@map("alteracao_atendimentos")
  @@schema("tatuape")
}

model tatuape_alteracao_campos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  campo_alterado    String?
  valor_anterior    String?
  valor_novo        String?
  alteracoes_campos tatuape_alteracoes_campos[]

  @@index([deleted_at], map: "idx_alteracao_campos_deleted_at")
  @@map("alteracao_campos")
  @@schema("tatuape")
}

model tatuape_alteracoes_campos {
  alteracao_atendimento_id BigInt
  alteracao_campos_id      BigInt
  alteracao_atendimentos   tatuape_alteracao_atendimentos @relation(fields: [alteracao_atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_atendimento")
  alteracao_campos         tatuape_alteracao_campos       @relation(fields: [alteracao_campos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_alteracoes_campos_alteracao_campos")

  @@id([alteracao_atendimento_id, alteracao_campos_id])
  @@map("alteracoes_campos")
  @@schema("tatuape")
}

model tatuape_atendimento_datas {
  atendimento_id BigInt
  data_id        BigInt
  atendimentos   tatuape_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_atendimento")
  data           tatuape_data         @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_datas_data")

  @@id([atendimento_id, data_id])
  @@map("atendimento_datas")
  @@schema("tatuape")
}

model tatuape_atendimento_entradas {
  id                 BigInt                @id @default(autoincrement())
  created_at         DateTime?             @db.Timestamptz(6)
  updated_at         DateTime?             @db.Timestamptz(6)
  deleted_at         DateTime?             @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?              @db.Decimal
  data_vencimento    String?
  observacoes        String?
  atendimentos       tatuape_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_entradas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_entradas_deleted_at")
  @@map("atendimento_entradas")
  @@schema("tatuape")
}

model tatuape_atendimento_preferencias_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    tatuape_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_atendimento")
  profissionals   tatuape_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_preferencias_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_preferencias_profissionais")
  @@schema("tatuape")
}

model tatuape_atendimento_profissionais {
  atendimento_id  BigInt
  profissional_id BigInt
  atendimentos    tatuape_atendimentos  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_atendimento")
  profissionals   tatuape_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_profissionais_profissional")

  @@id([atendimento_id, profissional_id])
  @@map("atendimento_profissionais")
  @@schema("tatuape")
}

model tatuape_atendimento_saidas {
  id                 BigInt                @id @default(autoincrement())
  created_at         DateTime?             @db.Timestamptz(6)
  updated_at         DateTime?             @db.Timestamptz(6)
  deleted_at         DateTime?             @db.Timestamptz(6)
  atendimento_id     BigInt?
  status_pagamento   String?
  status_atendimento String?
  valor_total        Decimal?              @db.Decimal
  data_vencimento    String?
  data_repase        String?
  status_repase      String?
  despesa            String?
  observacoes        String?
  atendimentos       tatuape_atendimentos? @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_saidas_atendimento")

  @@index([deleted_at], map: "idx_atendimento_saidas_deleted_at")
  @@map("atendimento_saidas")
  @@schema("tatuape")
}

model tatuape_atendimento_servicos {
  atendimento_id BigInt
  servico_id     BigInt
  atendimentos   tatuape_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_atendimento")
  servicos       tatuape_servicos     @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimento_servicos_servico")

  @@id([atendimento_id, servico_id])
  @@map("atendimento_servicos")
  @@schema("tatuape")
}

model tatuape_atendimentos {
  id                                     BigInt                                           @id @default(autoincrement())
  created_at                             DateTime?                                        @db.Timestamptz(6)
  updated_at                             DateTime?                                        @db.Timestamptz(6)
  deleted_at                             DateTime?                                        @db.Timestamptz(6)
  pacote                                 String?
  cliente_id                             BigInt?
  forma_pagamento                        String?
  usuario                                String?
  nome_vendedor                          String?
  repeticoes                             String?
  plano                                  String?
  caracteristica_plano                   String?
  data_inicio                            String?
  data_fim                               String?
  observacao_valor                       String?
  pagamento_antecipado                   String?
  endereco_id                            BigInt?
  duracao                                String?
  hora_de_entrada                        String?
  observacoes_de_servicos                String?
  observacoes_de_prestador               String?
  cupom_id                               BigInt?
  protocolo                              String?
  status_atendimento                     String?
  custos_extras                          String?
  observacao_custo_extra                 String?
  status_repase                          String?
  data_repase                            String?
  status_pagamento                       String?
  valor_servicos                         Decimal?                                         @db.Decimal
  acrestimo                              Decimal?                                         @db.Decimal
  desconto                               Decimal?                                         @db.Decimal
  valor_total                            Decimal?                                         @db.Decimal
  status_cliente                         String?
  status_profissional                    String?
  datas_selecionadas                     String?
  atualizar_endereco                     String?
  motivo_cancelamento                    String?
  descricao_cancelamento                 String?
  payment_id                             String?
  last_message_data                      String?
  last_message_time                      String?
  plano_id                               String?
  confirmed_date                         String?
  billing_type                           String?
  transaction_receipt_url                String?
  bank_slip_url                          String?
  external_reference                     String?
  repasse_id                             String?
  pagamento_id                           String?
  updated_hour                           Boolean?
  repasse_personalizado                  Boolean?
  repasse_valor                          Decimal?                                         @db.Decimal
  repasse_tipo_pagamento                 String?
  repasse_observacao                     String?
  avaliacao                              String?
  nota                                   BigInt?
  atendimento_datas                      tatuape_atendimento_datas[]
  atendimento_entradas                   tatuape_atendimento_entradas[]
  atendimento_preferencias_profissionais tatuape_atendimento_preferencias_profissionais[]
  atendimento_profissionais              tatuape_atendimento_profissionais[]
  atendimento_saidas                     tatuape_atendimento_saidas[]
  atendimento_servicos                   tatuape_atendimento_servicos[]
  clientes                               tatuape_clientes?                                @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cliente")
  cupoms                                 tatuape_cupoms?                                  @relation(fields: [cupom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_cupom")
  enderecos                              tatuape_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_atendimentos_endereco")
  financas                               tatuape_financas[]
  reclamacoes_atendimentos               tatuape_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_atendimentos_deleted_at")
  @@map("atendimentos")
  @@schema("tatuape")
}

model tatuape_cliente_enderecos {
  cliente_id  BigInt
  endereco_id BigInt
  clientes    tatuape_clientes  @relation(fields: [cliente_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_cliente")
  enderecos   tatuape_enderecos @relation(fields: [endereco_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cliente_enderecos_endereco")

  @@id([cliente_id, endereco_id])
  @@map("cliente_enderecos")
  @@schema("tatuape")
}

model tatuape_cliente_midias {
  cliente_id BigInt
  files_id   BigInt
  clientes   tatuape_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_cliente")
  files      tatuape_files    @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_midias_files")

  @@id([cliente_id, files_id])
  @@map("cliente_midias")
  @@schema("tatuape")
}

model tatuape_cliente_planos {
  cliente_id BigInt
  planos_id  BigInt
  clientes   tatuape_clientes @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_cliente")
  planos     tatuape_planos   @relation(fields: [planos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_planos_planos")

  @@id([cliente_id, planos_id])
  @@map("cliente_planos")
  @@schema("tatuape")
}

model tatuape_cliente_status {
  cliente_id        BigInt
  status_cliente_id BigInt
  clientes          tatuape_clientes        @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_cliente")
  status_clientes   tatuape_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_status_status_cliente")

  @@id([cliente_id, status_cliente_id])
  @@map("cliente_status")
  @@schema("tatuape")
}

model tatuape_clientes {
  id                   BigInt                      @id @default(autoincrement())
  created_at           DateTime?                   @db.Timestamptz(6)
  updated_at           DateTime?                   @db.Timestamptz(6)
  deleted_at           DateTime?                   @db.Timestamptz(6)
  nome                 String?
  cpf                  String?
  observacao           String?
  origem_cliente       String?
  email                String?
  saldo                BigInt?
  rating               BigInt?
  telefone             String?
  celular              String?
  asaas_id             String?
  responsavel_nome     String?
  responsavel_telefone String?
  responsavel_email    String?
  password             String?
  source               String?
  token_notification   String?
  status_novo          String?
  atendimentos         tatuape_atendimentos[]
  cliente_enderecos    tatuape_cliente_enderecos[]
  cliente_midias       tatuape_cliente_midias[]
  cliente_planos       tatuape_cliente_planos[]
  cliente_status       tatuape_cliente_status[]
  financas             tatuape_financas[]
  restritos            tatuape_restritos[]

  @@index([deleted_at], map: "idx_clientes_deleted_at")
  @@map("clientes")
  @@schema("tatuape")
}

model tatuape_cupoms {
  id            BigInt                 @id @default(autoincrement())
  created_at    DateTime?              @db.Timestamptz(6)
  updated_at    DateTime?              @db.Timestamptz(6)
  deleted_at    DateTime?              @db.Timestamptz(6)
  nome          String?
  valor         Decimal?               @db.Decimal
  data_validade String?
  ativo         Boolean?
  status        String?
  recorrente    String?
  quantidade    BigInt?
  usados        BigInt?
  atendimentos  tatuape_atendimentos[]

  @@index([deleted_at], map: "idx_cupoms_deleted_at")
  @@map("cupoms")
  @@schema("tatuape")
}

model tatuape_customer_midias {
  profissional_id BigInt
  files_id        BigInt
  files           tatuape_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_files")
  profissionals   tatuape_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customer_midias_profissional")

  @@id([profissional_id, files_id])
  @@map("customer_midias")
  @@schema("tatuape")
}

model tatuape_data {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  dia               BigInt?
  mes               BigInt?
  ano               BigInt?
  dia_da_semana     BigInt?
  atendimento_datas tatuape_atendimento_datas[]
  reclamacoes       tatuape_reclamacoes[]

  @@index([deleted_at], map: "idx_data_deleted_at")
  @@map("data")
  @@schema("tatuape")
}

model tatuape_enderecos {
  id                BigInt                      @id @default(autoincrement())
  created_at        DateTime?                   @db.Timestamptz(6)
  updated_at        DateTime?                   @db.Timestamptz(6)
  deleted_at        DateTime?                   @db.Timestamptz(6)
  rua               String?
  cep               String?
  numero            String?
  bairro            String?
  referencia        String?
  cidade            String?
  estado            String?
  pais              String?
  zona              String?
  complemento       String?
  latitude          String?
  longitude         String?
  atendimentos      tatuape_atendimentos[]
  cliente_enderecos tatuape_cliente_enderecos[]
  profissionals     tatuape_profissionals[]

  @@index([deleted_at], map: "idx_enderecos_deleted_at")
  @@map("enderecos")
  @@schema("tatuape")
}

model tatuape_especialidades {
  id                          BigInt                                @id @default(autoincrement())
  created_at                  DateTime?                             @db.Timestamptz(6)
  updated_at                  DateTime?                             @db.Timestamptz(6)
  deleted_at                  DateTime?                             @db.Timestamptz(6)
  nome                        String?
  profissional_especialidades tatuape_profissional_especialidades[]

  @@index([deleted_at], map: "idx_especialidades_deleted_at")
  @@map("especialidades")
  @@schema("tatuape")
}

model tatuape_files {
  id                  BigInt                        @id @default(autoincrement())
  created_at          DateTime?                     @db.Timestamptz(6)
  updated_at          DateTime?                     @db.Timestamptz(6)
  deleted_at          DateTime?                     @db.Timestamptz(6)
  url                 String?
  filename            String?
  type                String?
  cliente_midias      tatuape_cliente_midias[]
  customer_midias     tatuape_customer_midias[]
  profissional_anexos tatuape_profissional_anexos[]
  users_midias        tatuape_users_midias[]

  @@index([deleted_at], map: "idx_files_deleted_at")
  @@map("files")
  @@schema("tatuape")
}

model tatuape_financas {
  id                      BigInt                 @id @default(autoincrement())
  created_at              DateTime?              @db.Timestamptz(6)
  updated_at              DateTime?              @db.Timestamptz(6)
  deleted_at              DateTime?              @db.Timestamptz(6)
  nome                    String?
  tipo                    String?
  data_vencimento         String?
  data_pagamento          String?
  data_atendimento        String?
  observacao              String?
  valor                   Decimal?               @db.Decimal
  situacao                String?
  cliente_id              BigInt?
  atendimento_id          BigInt?
  profissional_id         BigInt?
  forma_de_pagamento      String?
  payment_id              String?
  external_reference      String?
  payment_link            String?
  status_pagamento        String?
  confirmed_date          String?
  billing_type            String?
  transaction_receipt_url String?
  bank_slip_url           String?
  target_invoice          String?
  customer_id             String?
  valor_recebimento       Decimal?               @db.Decimal
  estado                  String?
  tipo_financa            String?
  custos_fixos            Boolean?
  custos_variavel         Boolean?
  atendimentos_id         String?
  updated_status          Boolean?
  atendimentos            tatuape_atendimentos?  @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_atendimento")
  clientes                tatuape_clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_cliente")
  profissionals           tatuape_profissionals? @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_financas_profissional")

  @@index([deleted_at], map: "idx_financas_deleted_at")
  @@map("financas")
  @@schema("tatuape")
}

model tatuape_fr_cidades_bairros {
  franquias_id        BigInt
  franquias_bairro_id BigInt
  franquias           tatuape_franquias         @relation(fields: [franquias_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias")
  franquias_bairros   tatuape_franquias_bairros @relation(fields: [franquias_bairro_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fr_cidades_bairros_franquias_bairro")

  @@id([franquias_id, franquias_bairro_id])
  @@map("fr_cidades_bairros")
  @@schema("tatuape")
}

model tatuape_franquias {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  nome               String?
  url                String?
  url_front          String?
  latitude           String?
  longitude          String?
  cidade             String?
  estado             String?
  embed_cidade       String?
  email              String?
  numero             String?
  fr_cidades_bairros tatuape_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_deleted_at")
  @@map("franquias")
  @@schema("tatuape")
}

model tatuape_franquias_bairros {
  id                 BigInt                       @id @default(autoincrement())
  created_at         DateTime?                    @db.Timestamptz(6)
  updated_at         DateTime?                    @db.Timestamptz(6)
  deleted_at         DateTime?                    @db.Timestamptz(6)
  nome               String?
  embed_maps         String?
  fr_cidades_bairros tatuape_fr_cidades_bairros[]

  @@index([deleted_at], map: "idx_franquias_bairros_deleted_at")
  @@map("franquias_bairros")
  @@schema("tatuape")
}

model tatuape_grupos {
  id           BigInt                 @id @default(autoincrement())
  created_at   DateTime?              @db.Timestamptz(6)
  updated_at   DateTime?              @db.Timestamptz(6)
  deleted_at   DateTime?              @db.Timestamptz(6)
  nome         String?
  permissions  String?
  roles        String?
  users_grupos tatuape_users_grupos[]

  @@index([deleted_at], map: "idx_grupos_deleted_at")
  @@map("grupos")
  @@schema("tatuape")
}

model tatuape_pagamentos {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  code         String?
  description  String?
  amount       String?
  quantity     BigInt?
  redirect_url String?
  status       BigInt?
  atendimento  BigInt?

  @@index([deleted_at], map: "idx_pagamentos_deleted_at")
  @@map("pagamentos")
  @@schema("tatuape")
}

model tatuape_password_resets {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  email      String?
  token      String?

  @@index([deleted_at], map: "idx_password_resets_deleted_at")
  @@map("password_resets")
  @@schema("tatuape")
}

model tatuape_planilhas {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  url        String?

  @@index([deleted_at], map: "idx_planilhas_deleted_at")
  @@map("planilhas")
  @@schema("tatuape")
}

model tatuape_planos {
  id             BigInt                   @id @default(autoincrement())
  created_at     DateTime?                @db.Timestamptz(6)
  updated_at     DateTime?                @db.Timestamptz(6)
  deleted_at     DateTime?                @db.Timestamptz(6)
  nome           String?
  valor          Decimal?                 @db.Decimal
  desconto       BigInt?
  dias           BigInt?
  acrestimo      BigInt?
  plano          String?
  pacote         String?
  origem         String?
  cliente_planos tatuape_cliente_planos[]

  @@index([deleted_at], map: "idx_planos_deleted_at")
  @@map("planos")
  @@schema("tatuape")
}

model tatuape_precos {
  id         BigInt            @id @default(autoincrement())
  created_at DateTime?         @db.Timestamptz(6)
  updated_at DateTime?         @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  horas      BigInt?
  valor      Decimal?          @db.Decimal
  servico_id BigInt?
  tipo       String?
  servicos   tatuape_servicos? @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servicos_precos")

  @@index([deleted_at], map: "idx_precos_deleted_at")
  @@map("precos")
  @@schema("tatuape")
}

model tatuape_profissional_anexos {
  profissional_id BigInt
  files_id        BigInt
  files           tatuape_files         @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_files")
  profissionals   tatuape_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_anexos_profissional")

  @@id([profissional_id, files_id])
  @@map("profissional_anexos")
  @@schema("tatuape")
}

model tatuape_profissional_disponibilidade {
  profissional_id   BigInt
  status_cliente_id BigInt
  profissionals     tatuape_profissionals   @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_profissional")
  status_clientes   tatuape_status_clientes @relation(fields: [status_cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_disponibilidade_status_cliente")

  @@id([profissional_id, status_cliente_id])
  @@map("profissional_disponibilidade")
  @@schema("tatuape")
}

model tatuape_profissional_especialidades {
  profissional_id   BigInt
  especialidades_id BigInt
  especialidades    tatuape_especialidades @relation(fields: [especialidades_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_especialidades")
  profissionals     tatuape_profissionals  @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_especialidades_profissional")

  @@id([profissional_id, especialidades_id])
  @@map("profissional_especialidades")
  @@schema("tatuape")
}

model tatuape_profissional_servicos {
  profissional_id BigInt
  servico_id      BigInt
  profissionals   tatuape_profissionals @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_profissional")
  servicos        tatuape_servicos      @relation(fields: [servico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissional_servicos_servico")

  @@id([profissional_id, servico_id])
  @@map("profissional_servicos")
  @@schema("tatuape")
}

model tatuape_profissionals {
  id                                     BigInt                                           @id @default(autoincrement())
  created_at                             DateTime?                                        @db.Timestamptz(6)
  updated_at                             DateTime?                                        @db.Timestamptz(6)
  deleted_at                             DateTime?                                        @db.Timestamptz(6)
  nome                                   String?
  cpf                                    String?                                          @unique(map: "uni_profissionals_cpf")
  observacao                             String?
  email                                  String?
  status                                 String?
  saldo                                  String?
  rating                                 Decimal?                                         @db.Decimal
  telefone                               String?
  celular                                String?
  endereco_id                            BigInt?
  avatar                                 String?
  rg                                     String?
  zona                                   String?
  idade                                  BigInt?
  data_nascimento                        String?
  escolaridade                           String?
  banco                                  String?
  agencia                                String?
  conta                                  String?
  digito_conta                           String?
  digito_agencia                         String?
  cpf_titular                            String?
  titularidade                           String?
  vacina                                 String?
  situacao                               String?
  latitude                               String?
  longitude                              String?
  distancia                              String?
  atividade                              String?
  referencias_profissionais              String?
  atendimento_prestado                   BigInt?
  atendimentos_feitos                    BigInt?
  atendimentos_recusado                  BigInt?
  tempo_de_cadastro                      String?
  quantidade_falta                       String?
  numero_ocorrencias                     BigInt?
  reembolso_profissional                 String?
  referencia_profissional                String?
  antecedentes                           String?
  data_ultimo_treinamento                String?
  numero_matricula                       String?
  referencia_profissional_nome1          String?
  referencia_profissional_nome2          String?
  referencia_profissional_nome3          String?
  referencia_profissional_contato1       String?
  referencia_profissional_contato2       String?
  referencia_profissional_contato3       String?
  referencia_profissional_descricao1     String?
  referencia_profissional_descricao2     String?
  referencia_profissional_descricao3     String?
  asaas_id                               String?
  tipo_conta                             String?
  chave_pix                              String?
  contato_nome                           String?
  contato_parentesco                     String?
  contato_numero                         String?
  data_de_entrada                        String?
  data_termo_agenciamento                String?
  quantidade_de_blusas                   String?
  tamanho_blusas                         String?
  data_termo_uniforme                    String?
  situacao_contrato                      String?
  data_de_saida                          String?
  origem_profissional                    String?
  observacao_geral                       String?
  status_profissional                    String?
  tipo_operacao                          String?
  nivel_escolaridade                     String?
  status_escolaridade                    String?
  grupo_repasse                          String?
  contato_nome2                          String?
  contato_parentesco2                    String?
  contato_numero2                        String?
  atendimento_preferencias_profissionais tatuape_atendimento_preferencias_profissionais[]
  atendimento_profissionais              tatuape_atendimento_profissionais[]
  customer_midias                        tatuape_customer_midias[]
  financas                               tatuape_financas[]
  profissional_anexos                    tatuape_profissional_anexos[]
  profissional_disponibilidade           tatuape_profissional_disponibilidade[]
  profissional_especialidades            tatuape_profissional_especialidades[]
  profissional_servicos                  tatuape_profissional_servicos[]
  enderecos                              tatuape_enderecos?                               @relation(fields: [endereco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profissionals_endereco")
  reclamacoes                            tatuape_reclamacoes[]

  @@index([deleted_at], map: "idx_profissionals_deleted_at")
  @@map("profissionals")
  @@schema("tatuape")
}

model tatuape_reclamacoes {
  id                       BigInt                             @id @default(autoincrement())
  created_at               DateTime?                          @db.Timestamptz(6)
  updated_at               DateTime?                          @db.Timestamptz(6)
  deleted_at               DateTime?                          @db.Timestamptz(6)
  ticket                   String?
  nome                     String?
  data_id                  BigInt?
  hora                     String?
  data_reclamacoes         String?
  observacao               String?
  profissional_id          BigInt?
  status                   String?
  solucao                  String?
  valor                    String?
  data                     tatuape_data?                      @relation(fields: [data_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_data")
  profissionals            tatuape_profissionals?             @relation(fields: [profissional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_profissional")
  reclamacoes_atendimentos tatuape_reclamacoes_atendimentos[]

  @@index([deleted_at], map: "idx_reclamacoes_deleted_at")
  @@map("reclamacoes")
  @@schema("tatuape")
}

model tatuape_reclamacoes_atendimentos {
  reclamacoes_id BigInt
  atendimento_id BigInt
  atendimentos   tatuape_atendimentos @relation(fields: [atendimento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_atendimento")
  reclamacoes    tatuape_reclamacoes  @relation(fields: [reclamacoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_reclamacoes_atendimentos_reclamacoes")

  @@id([reclamacoes_id, atendimento_id])
  @@map("reclamacoes_atendimentos")
  @@schema("tatuape")
}

model tatuape_restritos {
  id         BigInt            @id @default(autoincrement())
  created_at DateTime?         @db.Timestamptz(6)
  updated_at DateTime?         @db.Timestamptz(6)
  deleted_at DateTime?         @db.Timestamptz(6)
  cliente    BigInt?
  clientes   tatuape_clientes? @relation(fields: [cliente], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_restritos_cliente_refer")

  @@index([deleted_at], map: "idx_restritos_deleted_at")
  @@map("restritos")
  @@schema("tatuape")
}

model tatuape_servicos {
  id                    BigInt                          @id @default(autoincrement())
  created_at            DateTime?                       @db.Timestamptz(6)
  updated_at            DateTime?                       @db.Timestamptz(6)
  deleted_at            DateTime?                       @db.Timestamptz(6)
  nome                  String?
  slogan                String?
  descricao             String?
  banner                String?
  icon                  String?
  icon_secundario       String?
  atendimento_servicos  tatuape_atendimento_servicos[]
  precos                tatuape_precos[]
  profissional_servicos tatuape_profissional_servicos[]

  @@index([deleted_at], map: "idx_servicos_deleted_at")
  @@map("servicos")
  @@schema("tatuape")
}

model tatuape_status_clientes {
  id                           BigInt                                 @id @default(autoincrement())
  created_at                   DateTime?                              @db.Timestamptz(6)
  updated_at                   DateTime?                              @db.Timestamptz(6)
  deleted_at                   DateTime?                              @db.Timestamptz(6)
  nome                         String?
  cliente_status               tatuape_cliente_status[]
  profissional_disponibilidade tatuape_profissional_disponibilidade[]

  @@index([deleted_at], map: "idx_status_clientes_deleted_at")
  @@map("status_clientes")
  @@schema("tatuape")
}

model tatuape_telefones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  telefone1  String?
  telefone2  String?

  @@index([deleted_at], map: "idx_telefones_deleted_at")
  @@map("telefones")
  @@schema("tatuape")
}

model tatuape_users {
  id           BigInt                 @id @default(autoincrement())
  created_at   DateTime?              @db.Timestamptz(6)
  updated_at   DateTime?              @db.Timestamptz(6)
  deleted_at   DateTime?              @db.Timestamptz(6)
  username     String?                @unique(map: "uni_users_username")
  password     String?
  nome         String?
  email        String?                @unique(map: "uni_users_email")
  is_staff     Boolean?
  users_grupos tatuape_users_grupos[]
  users_midias tatuape_users_midias[]

  @@index([deleted_at], map: "idx_users_deleted_at")
  @@map("users")
  @@schema("tatuape")
}

model tatuape_users_grupos {
  user_id   BigInt
  grupos_id BigInt
  grupos    tatuape_grupos @relation(fields: [grupos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_grupos")
  users     tatuape_users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_grupos_user")

  @@id([user_id, grupos_id])
  @@map("users_grupos")
  @@schema("tatuape")
}

model tatuape_users_midias {
  user_id  BigInt
  files_id BigInt
  files    tatuape_files @relation(fields: [files_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_files")
  users    tatuape_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_users_midias_user")

  @@id([user_id, files_id])
  @@map("users_midias")
  @@schema("tatuape")
}

model tatuape_vacinas {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  nome        String?
  data        String?
  hora        String?
  observacao  String?
  numero_dose BigInt?

  @@index([deleted_at], map: "idx_vacinas_deleted_at")
  @@map("vacinas")
  @@schema("tatuape")
}

model tatuape_valores_repasses {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @db.Timestamptz(6)
  updated_at    DateTime? @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  valor         Decimal?  @db.Decimal
  grupo_repasse String?
  duracao       String?
  plano         String?

  @@index([deleted_at], map: "idx_valores_repasses_deleted_at")
  @@map("valores_repasses")
  @@schema("tatuape")
}
